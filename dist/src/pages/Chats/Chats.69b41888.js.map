{"mappings":"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","sources":["src/utils/get.js","src/components/Templator.js","src/components/container/container.js","src/components/inputElement/inputElement.js","src/components/link/link.js","src/pages/Chats/Chats.js"],"sourcesContent":["\r\nexport default function get(obj, path, defaultValue) {\r\n    const keys = path.split('.');\r\n\r\n    let result = obj;\r\n    for (let key of keys) {\r\n        result = result[key];\r\n\r\n        if (result === undefined) {\r\n            return defaultValue;\r\n        }\r\n    }\r\n\r\n    return result ?? defaultValue;\r\n}","import get from \"../utils/get\";\r\n\r\nconst TEMPLATE_REGEXP = /\\{\\{(.*?)\\}\\}/gi;\r\n\r\nconst printableProps = {\r\n  id: \"id\",\r\n  classes: \"class\",\r\n  handleClick: \"onсlick\",\r\n  style: \"style\",\r\n  placeholder: \"placeholder\",\r\n  type: \"type\",\r\n  value: \"value\",\r\n  path: \"href\",\r\n  name: \"name\",\r\n  onclick: \"onclick\",\r\n  alt: \"alt\",\r\n  src: \"src\"\r\n};\r\n\r\nclass Templator {\r\n\r\n  _template = \"\";\r\n\r\n  constructor(template) {\r\n    this._template = template;\r\n  }\r\n\r\n  _compileTemplate(ctx) {\r\n    let tmpl = this._template,\r\n      key = null;\r\n\r\n    while ((key = TEMPLATE_REGEXP.exec(tmpl))) {\r\n      if (key[1]) {\r\n        const tmplValue = key[1].trim();\r\n        const data = get(ctx, tmplValue);\r\n        if (data) {\r\n          const propName = key[0].replace(/[{,}, ]/gi, \"\");\r\n          let replacedText = \"\";\r\n          if (typeof data === \"function\") {\r\n            window[tmplValue] = data;\r\n            replacedText = printableProps[propName] ? `${printableProps[propName]}='window.${tmplValue}()'` : `window.${tmplValue}()`;\r\n            tmpl = tmpl.replace(\r\n              new RegExp(key[0], \"gi\"),\r\n              replacedText\r\n            );\r\n            continue;\r\n          } else {\r\n            replacedText = printableProps[propName] ? `${printableProps[propName]}='${data}'` : data;\r\n            tmpl = tmpl.replace(new RegExp(key[0], \"gi\"), replacedText);\r\n          }\r\n        }\r\n      }\r\n    }\r\n    tmpl = tmpl.replace(TEMPLATE_REGEXP, '');\r\n    return tmpl;\r\n  }\r\n\r\n  compile(ctx) {\r\n    return this._compileTemplate(ctx);\r\n  }\r\n}\r\n\r\nexport { Templator };","import \"../container/container.css\";\r\nimport { Templator } from \"../Templator\";\r\n\r\nconst CONTAINER_TEMPLATE = `<{{ tag }} {{ }} {{ src }} {{ style }} {{ classes }} {{ alt }}>{{ textContent }}</{{ tag }}>`;\r\n\r\nfunction getContainerHTML(config) {\r\n    const templator = new Templator(CONTAINER_TEMPLATE);\r\n    return templator.compile(config);\r\n}\r\n\r\nexport {getContainerHTML};","import { Templator } from \"../Templator\";\r\nimport {getContainerHTML} from \"../container/container\"\r\nimport \"../inputElement/inputElement.css\";\r\n\r\nconst INPUT_TEMPLATE = `<input {{ name }} {{ type }} {{ placeholder }} {{ classes }} {{ style }} {{ value }} {{ onclick }} {{ disabled }}>{{ textContent }}</input>`;\r\n\r\nconst defaultClasses = [\r\n    \"base-input\"\r\n];\r\n\r\nconst defaultTextClass = \"base-input-text\";\r\nconst defaultButtonClass = \"base-input-button\";\r\n\r\nconst defaultContainerConfig = {\r\n    tag: \"div\",\r\n    classes: \"input-container\",\r\n};\r\n\r\nfunction getInputHTML(config) {\r\n    config.classes = (config.classes || \"\") + \" \" + defaultClasses.join(\" \");\r\n    let tpl;\r\n    if (!config.type || config.type === \"text\" || config.type === \"password\") {\r\n        applyTextClass(config);\r\n        tpl = getTextInputContainer(config);\r\n    } else if (config.type === \"button\") {\r\n        applyButtonClass(config);\r\n    }\r\n    if (!tpl) {\r\n        const templator = new Templator(INPUT_TEMPLATE);\r\n        tpl = templator.compile(config)\r\n    }\r\n    return tpl;\r\n}\r\n\r\nfunction getTextInputContainer(config) {\r\n    const templator = new Templator(INPUT_TEMPLATE);\r\n    const containerConfig =  config.containerConfig || defaultContainerConfig;\r\n    containerConfig.textContent = containerConfig.textContent || \"\";\r\n    if (config && config.labelConfig) {\r\n        containerConfig.textContent += getInputLabelHTML(config.labelConfig);\r\n    }\r\n    containerConfig.textContent += templator.compile(config)\r\n    return getContainerHTML(containerConfig);\r\n}\r\n\r\nfunction getInputLabelHTML(labelConfig) {\r\n    return getContainerHTML(labelConfig);\r\n}\r\n\r\nfunction applyTextClass(config) {\r\n    config.classes += ` ${defaultTextClass}`;\r\n}\r\n\r\nfunction applyButtonClass(config) {\r\n    config.classes += ` ${defaultButtonClass}`;\r\n}\r\n\r\nexport {getInputHTML};","import \"../link/link.css\";\r\nimport { Templator } from \"../Templator\";\r\n\r\nconst LABEL_TEMPLATE = `<a {{ classes }} {{ style }} {{ path }}>{{textContent}}</a>`;\r\n\r\nconst defaultClasses = [\r\n    \"base-link\"\r\n];\r\n\r\nfunction getLinkHTML(config) {\r\n    config.classes = (config.classes || \"\") + \" \" + defaultClasses.join(\" \");\r\n    const templator = new Templator(LABEL_TEMPLATE);\r\n    return templator.compile(config);\r\n}\r\n\r\nexport {getLinkHTML};","import \"./Chats.css\";\r\n\r\nimport { getContainerHTML } from \"../../components/container/container\";\r\nimport { getInputHTML } from \"../../components/inputElement/inputElement\";\r\nimport { getLinkHTML } from \"../../components/link/link\";\r\n\r\nconst LEFT_CONTAINER_CLASS = `left-container`,\r\n  CHAT_CONTAINER_CLASS = `chat-container`,\r\n  PROFILE_LINK_CLASS = `profile-link`,\r\n  SEARCH_FIELD_CLASS = `search`,\r\n  CHAT_LIST_CONTAINER_CLASS = `chat-list-container`;\r\n\r\nfunction addContent() {\r\n  addLeftContainer();\r\n  addChatContainer();\r\n}\r\n\r\nfunction addLeftContainer() {\r\n  const context = {\r\n    tag: \"div\",\r\n    classes: LEFT_CONTAINER_CLASS\r\n  };\r\n  const block = document.querySelector(`body`),\r\n    container = getContainerHTML(context);\r\n  block.insertAdjacentHTML(\"beforeend\", container);\r\n  addLeftContainerContent();\r\n}\r\n\r\nfunction addLeftContainerContent() {\r\n  addProfileLink();\r\n  addSearchField();\r\n  addChatListContainer();\r\n}\r\n\r\nfunction addProfileLink() {\r\n  const context = {\r\n    classes: `${LEFT_CONTAINER_CLASS}__${PROFILE_LINK_CLASS}`,\r\n    textContent: \"Профиль \" + '\\u276f',\r\n    path: \"../Profile/Profile.html\"\r\n  };\r\n  const block = document.querySelector(`.${LEFT_CONTAINER_CLASS}`),\r\n    container = getLinkHTML(context);\r\n  block.insertAdjacentHTML(\"beforeend\", container);\r\n}\r\n\r\nfunction addSearchField() {\r\n  const defaultClass = `${LEFT_CONTAINER_CLASS}__${SEARCH_FIELD_CLASS}`;\r\n  const context = {\r\n    classes: `${defaultClass} ${defaultClass}_empty`,\r\n    placeholder:  `&#128270 Поиск`\r\n  };\r\n  const container = document.querySelector(`.${LEFT_CONTAINER_CLASS}`),\r\n    input = getInputHTML(context);\r\n    container.insertAdjacentHTML(\"beforeend\", input);\r\n}\r\n\r\nfunction addChatListContainer() {\r\n  const context = {\r\n    tag: \"div\",\r\n    classes: CHAT_LIST_CONTAINER_CLASS,\r\n    textContent: \"Нет чатов\"\r\n  };\r\n  const block = document.querySelector(`.${LEFT_CONTAINER_CLASS}`),\r\n    container = getContainerHTML(context);\r\n  block.insertAdjacentHTML(\"beforeend\", container);\r\n}\r\n\r\nfunction addChatContainer() {\r\n  const context = {\r\n    tag: \"div\",\r\n    classes: CHAT_CONTAINER_CLASS,\r\n    textContent: \"Выберите чат чтобы отправить сообщение\"\r\n  };\r\n  const block = document.querySelector(`body`),\r\n    container = getContainerHTML(context);\r\n  block.insertAdjacentHTML(\"beforeend\", container);\r\n}\r\n\r\naddContent();"],"names":["obj","path","defaultValue","keys","split","result","key","undefined","$6d1afd06e4f16982$var$TEMPLATE_REGEXP","$6d1afd06e4f16982$var$printableProps","id","classes","handleClick","style","placeholder","type","value","name","onclick","alt","src","$6d1afd06e4f16982$export$bda0decfc3e51f17","_template","template","this","_compileTemplate","ctx","tmpl","exec","tmplValue","trim","data","$10efe51f2fa57cc0$export$2e2bcd8739ae039","propName","replace","replacedText","window","RegExp","compile","ctx1","$316c3c1af49ddb6a$export$1b820fdbd0647f3c","config","$0ec6c42cfd965ff2$var$INPUT_TEMPLATE","$0ec6c42cfd965ff2$var$defaultClasses","$0ec6c42cfd965ff2$var$defaultContainerConfig","tag","$0ec6c42cfd965ff2$export$205ab786add9a6b1","tpl","join","$0ec6c42cfd965ff2$var$applyButtonClass","$0ec6c42cfd965ff2$var$applyTextClass","templator","containerConfig","textContent","labelConfig","$0ec6c42cfd965ff2$var$getTextInputContainer","$ce78f65ca9e598ec$var$defaultClasses","context","block","document","querySelector","container","insertAdjacentHTML","$341647850ca21387$var$addProfileLink","defaultClass","input","$341647850ca21387$var$addSearchField","$341647850ca21387$var$addChatListContainer","$341647850ca21387$var$addLeftContainer","$341647850ca21387$var$addChatContainer"],"version":3,"file":"Chats.69b41888.js.map"}