{"mappings":"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","sources":["src/utils/RouteUtils/Route.ts","src/utils/render.ts","src/utils/get.ts","src/utils/merge.ts","src/utils/set.ts","src/utils/namespace.ts","src/utils/EventBus.ts","src/modules/ApplicationState/ApplicationStore.ts","src/utils/RouteUtils/Router.ts","src/controllers/BaseController.ts","src/utils/Templator/Templator.ts","src/components/block/block.ts","src/components/label/label.ts","src/components/label/template.ts","src/components/container/container.ts","src/components/container/template.ts","src/components/Input/input.ts","src/components/Input/template.ts","src/components/containeredInput/containeredInput.ts","src/components/containeredInput/template.ts","src/components/form/form.ts","src/utils/Validators/BaseValidator.ts","src/utils/Validators/NameValidator.ts","src/utils/Validators/PasswordValidator.ts","src/utils/Validators/LoginValidator.ts","src/utils/Validators/PhoneValidator.ts","src/utils/Validators/EmailValidator.ts","src/utils/Validators/ValidatorFactory.ts","src/modules/loginForm/loginForm.ts","src/modules/loginForm/template.ts","src/modules/popup/popup.ts","src/modules/popup/template.ts","src/pages/login/login.ts","src/pages/login/template.ts","src/utils/API/BaseApi.ts","src/utils/queryString.ts","src/utils/XHR.ts","src/utils/API/UserApi.ts","src/utils/API/LoginPageApi.ts","src/controllers/LoginPageController.ts","src/pages/newprofile/profile.ts","src/pages/newprofile/template.ts","src/components/block/template.ts","src/utils/API/ProfileApi.ts","src/controllers/ProfilePageController.ts","src/modules/chat/chat.ts","src/modules/chat/template.ts","src/pages/Chats/chats.ts","src/pages/Chats/template.ts","src/utils/API/ChatPageApi.ts","src/controllers/ChatsPageController.ts","src/modules/signUpForm/signUpForm.ts","src/modules/signUpForm/template.ts","src/pages/signUp/signUp.ts","src/utils/API/SignUpPageApi.ts","src/controllers/SignUpPageController.ts","src/pages/error/errorPage.ts","src/pages/error/template.ts","src/controllers/404ErrorController.ts","static/index.ts"],"sourcesContent":["import {blockProperty} from \"../../components/block/types\";\r\nimport {render} from \"../render\";\r\nimport {Constructable} from \"./types\";\r\nimport {BaseController} from \"../../controllers/BaseController\";\r\n\r\nexport class Route {\r\n  \r\n  _pathname: string;\r\n  \r\n  _controllerClass: Constructable;\r\n  \r\n  _controller: BaseController | null;\r\n  \r\n  _props: blockProperty;\r\n  \r\n  constructor(pathname: string, view: Constructable, props: blockProperty) {\r\n    this._pathname = pathname;\r\n    this._controllerClass = view;\r\n    this._controller = null;\r\n    this._props = props;\r\n  }\r\n  \r\n  navigate(pathname: string) {\r\n    if (this.match(pathname)) {\r\n      this.render();\r\n    }\r\n  }\r\n  \r\n  leave() {\r\n    if (this._controller) {\r\n      this._controller.hideView();\r\n    }\r\n  }\r\n  \r\n  match(pathname: string) {\r\n    return isEqual(pathname, this._pathname);\r\n  }\r\n  \r\n  render() {\r\n    if (!this._controller) {\r\n      this._controller = new this._controllerClass(this._props);\r\n    }\r\n    render(this._props.rootQuery, this._controller.view!);\r\n  }\r\n}\r\n\r\nfunction isEqual(lhs: string, rhs: string) {\r\n  return lhs === rhs;\r\n}","import {Block} from \"../components/block/block\";\r\n\r\nexport function render(query: string, block: Block) {\r\n  const root = document.querySelector(query);\r\n  if (root) {\r\n    root.innerHTML = \"\";\r\n    root.appendChild(block.getContent());\r\n  }\r\n  return root;\r\n}\r\n\r\nexport function renderPopup(block: Block) {\r\n  const root = document.querySelector(\"body\");\r\n  if (root) {\r\n    root.appendChild(block.getContent());\r\n  }\r\n  return root;\r\n}\r\n","export default function get(obj: object, path: string, defaultValue?: any): any {\r\n  const keys: string[] = path.split(\".\");\r\n  \r\n  let result: any = obj;\r\n  for (let key of keys) {\r\n    result = result[key];\r\n    \r\n    if (result === undefined) {\r\n      return defaultValue;\r\n    }\r\n  }\r\n  \r\n  return result ?? defaultValue;\r\n}\r\n","type Indexed<T = unknown> = {\r\n  [key in string]: T;\r\n};\r\n\r\nfunction merge(lhs: Indexed, rhs: Indexed): Indexed {\r\n  Object.keys(rhs).reduce( (result: Indexed, key: string): Indexed => {\r\n    const left = result[key], right = rhs[key];\r\n    if (key in result && checkObject(left) && checkObject(right)) {\r\n      return merge(left, right);\r\n    }\r\n    result[key] = rhs[key];\r\n    return result;\r\n  }, lhs);\r\n  return lhs;\r\n}\r\n\r\nfunction checkObject(value: any): value is Indexed {\r\n  return typeof value === \"object\" && value && !Array.isArray(value);\r\n}\r\n\r\nexport default merge;","import namespace from \"./namespace\";\r\nimport merge from \"./merge\";\r\n\r\ntype Indexed<T = unknown> = {\r\n  [key in string]: T;\r\n};\r\n\r\nfunction set(object: Indexed | unknown, path: string, value: unknown): Indexed | unknown {\r\n  if (typeof object !== \"object\" || object === null || Array.isArray(object)) {\r\n    return object;\r\n  }\r\n  checkPath(path);\r\n  const newObj: Indexed = namespace(path, value);\r\n  return merge(object as Indexed, newObj);\r\n}\r\n\r\nfunction checkPath(part: string) {\r\n  if (typeof part !== \"string\") {\r\n    throw new Error(\"path must be string\");\r\n  }\r\n}\r\n\r\nexport default set;","type Indexed<T = unknown> = {\r\n  [key in string]: T;\r\n};\r\n\r\nexport default function namespace(value: string, start: any): Indexed {\r\n  if (~value.indexOf(\",\")) {\r\n    throw new Error(\"Нет точек\");\r\n  }\r\n  const arr= value.split(\".\");\r\n  return arr.reduceRight((result, item, index) => {\r\n    if (index === arr.length - 1 && start !== undefined) {\r\n      result = {[item]: start};\r\n    } else {\r\n      result = {[item]: result};\r\n    }\r\n    return result;\r\n  }, {});\r\n}\r\n","type Listener = Record<string, Function[]>\r\n\r\nexport default class EventBus {\r\n  \r\n  listeners: Listener;\r\n  \r\n  constructor() {\r\n    this.listeners = {};\r\n  }\r\n  \r\n  on(event: string, callback: Function): void {\r\n    if (!this.listeners[event]) {\r\n      this.listeners[event] = [];\r\n    }\r\n    \r\n    this.listeners[event].push(callback);\r\n  }\r\n  \r\n  off(event: string, callback: Function): void {\r\n    if (!this.listeners[event]) {\r\n      throw new Error(`Нет события: ${event}`);\r\n    }\r\n    \r\n    this.listeners[event] = this.listeners[event].filter(\r\n      listener => listener !== callback\r\n    );\r\n  }\r\n  \r\n  emit(event: string, ...args: any[]): void {\r\n    if (!this.listeners[event]) {\r\n      throw new Error(`Нет события: ${event}`);\r\n    }\r\n    \r\n    this.listeners[event].forEach((listener) => {\r\n      listener(...args);\r\n    });\r\n  }\r\n}\r\n","import set from \"../../utils/set\";\r\nimport EventBus from \"../../utils/EventBus\";\r\nimport {ApplicationStateConfig} from \"./types\";\r\n\r\nexport enum StoreEvents {\r\n  Updated = \"updated\",\r\n}\r\n\r\nclass ApplicationStore extends EventBus {\r\n  \r\n  state: ApplicationStateConfig = {};\r\n  \r\n  public set(path: string, value: unknown) {\r\n    set(this.state, path, value);\r\n    \r\n    this.emit(StoreEvents.Updated, path, value);\r\n  }\r\n  \r\n  public getState() {\r\n    return this.state;\r\n  }\r\n}\r\n\r\nexport default new ApplicationStore();","import {Route} from \"./Route\";\r\nimport {Constructable} from \"./types\";\r\nimport get from \"../get\";\r\nimport ApplicationStore from \"../../modules/ApplicationState/ApplicationStore\";\r\n\r\nexport class Router {\r\n  \r\n  static __instance: Router;\r\n  \r\n  routes: Route[];\r\n  \r\n  history: History;\r\n  \r\n  _currentRoute: Route | null;\r\n  \r\n  _rootQuery: string;\r\n  \r\n  constructor(rootQuery: string) {\r\n    if (Router.__instance) {\r\n      return Router.__instance;\r\n    }\r\n    \r\n    this.routes = [];\r\n    this.history = window.history;\r\n    this._currentRoute = null;\r\n    this._rootQuery = rootQuery;\r\n    \r\n    Router.__instance = this;\r\n  }\r\n  \r\n  use(pathname: string, block: Constructable) {\r\n    const route = new Route(pathname, block, {rootQuery: this._rootQuery});\r\n    this.routes.push(route);\r\n    return this;\r\n  }\r\n  \r\n  start() {\r\n    window.addEventListener(\"popstate\", (e: PopStateEvent) => {\r\n      this._onRoute((e.currentTarget as Window).location.pathname);\r\n    });\r\n    let user = get(ApplicationStore.getState(), \"user\");\r\n    const path = window.location.pathname;\r\n    if (user && (path === \"/\" || path === \"/sign-up\")) {\r\n      this.go(\"/messenger\");\r\n    } else {\r\n      this._onRoute(window.location.pathname);\r\n    }\r\n  }\r\n  \r\n  _onRoute(pathname: string) {\r\n    const route = this.getRoute(pathname);\r\n    this._currentRoute = route!;\r\n    if (!route) {\r\n      this.go(\"/404\");\r\n    } else {\r\n      route.render();\r\n    }\r\n  }\r\n  \r\n  go(pathname:string) {\r\n    this.history.pushState({}, \"\", pathname);\r\n    this._onRoute(pathname);\r\n  }\r\n  \r\n  back() {\r\n    this.history.back();\r\n  }\r\n  \r\n  forward() {\r\n    this.history.forward();\r\n  }\r\n  \r\n  getRoute(pathname: string) {\r\n    return this.routes.find(route => route.match(pathname));\r\n  }\r\n}","import {Block} from \"../components/block/block\";\r\nimport EventBus from \"../utils/EventBus\";\r\n\r\nexport class BaseController {\r\n  \r\n  eventBus: EventBus;\r\n  \r\n  view: Block;\r\n  \r\n  constructor(view: Block) {\r\n    this.view = view;\r\n    this.eventBus = new EventBus();\r\n  }\r\n  \r\n  hideView(): void {\r\n    this.view.hide();\r\n  }\r\n  \r\n  showView(): void {\r\n    this.view.show();\r\n  }\r\n}\r\n","import get from \"../get\";\r\nimport {Block} from \"../../components/block/block\";\r\n\r\n\r\nconst TEMPLATE_REGEXP = /\\{\\{(.*?)\\}\\}/gi;\r\n\r\nconst printableProps: Record<string, string> = {\r\n  id: \"id\",\r\n  classes: \"class\",\r\n  style: \"style\",\r\n  placeholder: \"placeholder\",\r\n  type: \"type\",\r\n  value: \"value\",\r\n  href: \"href\",\r\n  name: \"name\",\r\n  alt: \"alt\",\r\n  src: \"src\"\r\n};\r\n\r\nexport class Templator {\r\n  \r\n  _template = \"\";\r\n  \r\n  items: HTMLElement[] = [];\r\n  \r\n  classes: string[] = [];\r\n  \r\n  textContent: string = \"\";\r\n  \r\n  constructor(template: string) {\r\n    this._template = template;\r\n  }\r\n  \r\n  _compileTemplate(ctx: Record<string, string | string[] | Block>): HTMLElement {\r\n    let tmpl = this._template,\r\n      key = null;\r\n    const result: string[] = [];\r\n    const valueIndex = 1;\r\n    while ((key = TEMPLATE_REGEXP.exec(tmpl))) {\r\n      if (key[valueIndex]) {\r\n        const tmpls: string[] = key[valueIndex].trim().split(\" \").filter((item) => item);\r\n        let tmplValue: string | undefined = tmpls.pop();\r\n        while (tmplValue) {\r\n          const data = get(ctx, tmplValue);\r\n          if (data) {\r\n            if (this._isBlock(data)) {\r\n              this.items.push(data.getContent());\r\n              tmplValue = tmpls.pop();\r\n              continue;\r\n            } else if (this._isBlockArray(data)) {\r\n              data.forEach((item) => {\r\n                this.items.push(item.getContent());\r\n              });\r\n              tmplValue = tmpls.pop();\r\n              continue;\r\n            } else {\r\n              let replacedText = \"\";\r\n              if (!this._isStringArray(data)) {\r\n                if (tmplValue === \"textContent\") {\r\n                  this.textContent = data;\r\n                  tmplValue = tmpls.pop();\r\n                  continue;\r\n                }\r\n                if (data !== \"false\") {\r\n                  replacedText = printableProps[tmplValue] ? `${printableProps[tmplValue]}='${data}'` : data;\r\n                }\r\n              } else {\r\n                if (tmplValue === \"classes\") {\r\n                  this.classes = data;\r\n                  replacedText = `${printableProps[tmplValue]}='${(data as string[]).join(\" \")}'`;\r\n                } else {\r\n                  const newData = (data as string[]).join(\"\");\r\n                  replacedText = printableProps[tmplValue] ? `${printableProps[tmplValue]}='${newData}'` : newData;\r\n                }\r\n              }\r\n              result.push(replacedText);\r\n            }\r\n          }\r\n          tmplValue = tmpls.pop();\r\n        }\r\n      }\r\n    }\r\n    tmpl = tmpl.replace(TEMPLATE_REGEXP, result.join(\" \"));\r\n    return this._getElement(tmpl);\r\n  }\r\n  \r\n  _getElement(tmpl: string): HTMLElement {\r\n    const fragment = document.createElement(\"template\");\r\n    fragment.innerHTML = tmpl;\r\n    let root: HTMLElement;\r\n    if (this.classes!.length) {\r\n      // @ts-ignore\r\n      root = fragment.content.querySelector(`.${this.classes.join(\".\")}`);\r\n    } else {\r\n      root = fragment.content.children[0] as HTMLElement;\r\n    }\r\n    if (root) {\r\n      root.textContent = this.textContent;\r\n      this.items.forEach((item) => root!.appendChild(item));\r\n    }\r\n    return root;\r\n  }\r\n  \r\n  _isBlock(value: unknown): value is Block {\r\n    return value instanceof Block;\r\n  }\r\n  \r\n  _isStringArray(value: unknown): value is string[] {\r\n    return Array.isArray(value) && value.every(el => typeof el === \"string\");\r\n  }\r\n  \r\n  _isBlockArray(value: unknown): value is Block[] {\r\n    return Array.isArray(value) && value.every(el => el instanceof Block);\r\n  }\r\n  \r\n  compile(ctx: Record<string, any>) {\r\n    return this._compileTemplate(ctx);\r\n  }\r\n}\r\n","import {blockProperty, Meta} from \"./types\";\r\nimport EventBus from \"../../utils/EventBus\";\r\nimport {Templator} from \"../../utils/Templator/Templator\";\r\nimport \"./styles.scss\";\r\n\r\nexport class Block {\r\n  static EVENTS = {\r\n    INIT: \"init\",\r\n    FLOW_CDM: \"flow:component-did-mount\",\r\n    FLOW_CDU: \"flow:component-did-update\",\r\n    FLOW_RENDER: \"flow:render\"\r\n  };\r\n  \r\n  protected _element: HTMLElement;\r\n  \r\n  protected _meta: Meta;\r\n  \r\n  public props: blockProperty;\r\n  \r\n  eventBus: EventBus;\r\n  \r\n  protected template: string | undefined = \"\";\r\n  \r\n  /** JSDoc\r\n   * @param {string} tagName\r\n   * @param {Object} props\r\n   *\r\n   * @returns {void}\r\n   */\r\n  constructor(tagName: string = \"div\", props?: blockProperty, template?: string) {\r\n    this.template = template;\r\n    \r\n    this._meta = {\r\n      tagName,\r\n      props\r\n    };\r\n    \r\n    this.props = this._makePropsProxy(props);\r\n    \r\n    this.eventBus = new EventBus();\r\n    \r\n    this._registerEvents(this.eventBus);\r\n    this.eventBus.emit(Block.EVENTS.INIT);\r\n  }\r\n  \r\n  private _registerEvents(eventBus: EventBus) {\r\n    eventBus.on(Block.EVENTS.INIT, this.init.bind(this));\r\n    eventBus.on(Block.EVENTS.FLOW_CDM, this._componentDidMount.bind(this));\r\n    eventBus.on(Block.EVENTS.FLOW_CDU, this._componentDidUpdate.bind(this));\r\n    eventBus.on(Block.EVENTS.FLOW_RENDER, this._render.bind(this));\r\n  }\r\n  \r\n  private init(): void {\r\n    this._createResources();\r\n    this.eventBus.emit(Block.EVENTS.FLOW_CDM);\r\n  }\r\n  \r\n  private _componentDidMount() {\r\n    this.componentDidMount();\r\n    this.eventBus.emit(Block.EVENTS.FLOW_RENDER);\r\n  }\r\n  _createResources() {\r\n    const { tagName } = this._meta;\r\n    this._element = this._createDocumentElement(tagName);\r\n  }\r\n  \r\n  _createDocumentElement(tagName: string) {\r\n    // Можно сделать метод, который через фрагменты в цикле создаёт сразу несколько блоков\r\n    return document.createElement(tagName);\r\n  }\r\n  \r\n  // Может переопределять пользователь, необязательно трогать\r\n  componentDidMount() {\r\n  }\r\n  \r\n  dispatchComponentDidMount(): void {\r\n    this.eventBus.emit(Block.EVENTS.FLOW_CDM);\r\n  }\r\n  \r\n  // Может переопределять пользователь, необязательно трогать\r\n  componentDidUpdate(oldValue?: string | boolean, newValue?:  string | boolean): boolean {\r\n    return oldValue !== newValue;\r\n  }\r\n  \r\n  private _componentDidUpdate(oldValue?:  string | boolean, newValue?:  string | boolean): void {\r\n    const response = this.componentDidUpdate(oldValue,  newValue);\r\n    if (response) {\r\n      this.eventBus.emit(Block.EVENTS.FLOW_RENDER);\r\n    }\r\n  }\r\n  \r\n  setProps = (nextProps: blockProperty) => {\r\n    if (!nextProps) {\r\n      return;\r\n    }\r\n    Object.assign(this.props, nextProps);\r\n  };\r\n  \r\n  get element() {\r\n    return this._element;\r\n  }\r\n  \r\n  _render(): void {\r\n    const newElement: HTMLElement= this.render();\r\n    this.removeListeners();\r\n    const tempEl = this._element;\r\n    this._element = newElement;\r\n    tempEl.replaceWith(newElement);\r\n    this.addListeners();\r\n  }\r\n  \r\n  // Может переопределять пользователь, необязательно трогать\r\n  render(): HTMLElement {\r\n    const templator: Templator = new Templator(this.template || \"\");\r\n    return templator.compile(this.props);\r\n  }\r\n  \r\n  getContent() {\r\n    return this.element;\r\n  }\r\n  \r\n  private _makePropsProxy(props?: blockProperty): blockProperty {\r\n    const self: Block = this;\r\n    return new Proxy(props || {}, {\r\n      get(target: Meta, property: string, receiver) {\r\n        return Reflect.get(target, property, receiver);\r\n      },\r\n      // eslint-disable-next-line max-params\r\n      set: (target: blockProperty, property: string, value, receiver) => {\r\n        if (target[property] !== value) {\r\n          const oldValue = target[property];\r\n          Reflect.set(target, property, value, receiver);\r\n          self.eventBus.emit(Block.EVENTS.FLOW_CDU, oldValue, value);\r\n        }\r\n        return true;\r\n      },\r\n      deleteProperty() {\r\n        throw new Error(\"нет доступа\");\r\n      }\r\n    });\r\n  }\r\n  \r\n  addListeners(): void {\r\n    const listeners: Record<string, () => void> = this.props.listeners;\r\n    if (!listeners || !this.element) {\r\n      return;\r\n    }\r\n    Object.entries(listeners).forEach(([eventName, handler]) => {\r\n      this.element.addEventListener(eventName, handler, {once: eventName === \"blur\"});\r\n    });\r\n  }\r\n  \r\n  removeListeners(): void {\r\n    const listeners: Record<string, () => void> = this.props.listeners;\r\n    if (!listeners || !this.element) {\r\n      return;\r\n    }\r\n    Object.entries(listeners).forEach(([eventName, handler]) => {\r\n      this.element.removeEventListener(eventName, handler);\r\n    });\r\n  }\r\n  \r\n  toggleClasses(insertClasses: string[], removeClasses: string[]): blockProperty{\r\n    const cls: Set<string> = new Set(this.props.classes);\r\n    if (cls.size) {\r\n      removeClasses.forEach((remove: string) => cls.delete(remove));\r\n      insertClasses.forEach((insert: string) => cls.add(insert));\r\n    }\r\n    return Array.from(cls);\r\n  }\r\n  \r\n  show() {\r\n    this._element.style.display = \"block\";\r\n  }\r\n  \r\n  hide() {\r\n    this._element.style.display = \"none\";\r\n  }\r\n}\r\n","import {Block} from \"../block/block\";\r\nimport template from \"./template\";\r\nimport {blockProperty} from \"../block/types\";\r\n\r\nexport class Label extends Block {\r\n  \r\n  constructor(props: blockProperty) {\r\n    super(\"div\", props, template);\r\n  }\r\n}\r\n","const template = \"<div {{ classes textContent }}></div>\";\r\n\r\nexport default template;\r\n","import {Block} from \"../block/block\";\r\nimport {blockProperty} from \"../block/types\";\r\nimport containerTemplate  from \"./template\";\r\n\r\nexport class Container extends Block {\r\n  \r\n  constructor(props: blockProperty, template?: string) {\r\n    super(\"div\", props, template || containerTemplate);\r\n  }\r\n}\r\n","const template = \"<div {{ classes textContent form label }}></div>\";\r\n\r\nexport default template;\r\n","import {Block} from \"../block/block\";\r\nimport {blockProperty} from \"../block/types\";\r\nimport template from \"./template\";\r\n\r\nexport class Input extends Block {\r\n  \r\n  focused: boolean;\r\n  \r\n  constructor(props: blockProperty) {\r\n    super(\"input\", props, template);\r\n  }\r\n  \r\n  validate(): string {\r\n    if (!this.props.validator) {\r\n      return \"\";\r\n    } else {\r\n      this.props.validator.field = this.getContent() as HTMLInputElement;\r\n      return this.props.validator.checkValid();\r\n    }\r\n  }\r\n}\r\n","const template = \"<input {{ name type placeholder value classes disabled }}></input>\";\r\n\r\nexport default template;\r\n","import {blockProperty} from \"../block/types\";\r\nimport {Block} from \"../block/block\";\r\nimport template from \"./template\";\r\nimport {Label} from \"../label/label\";\r\nimport {Input} from \"../Input/input\";\r\nimport {Templator} from \"../../utils/Templator/Templator\";\r\n\r\nimport \"./style.scss\";\r\n\r\n\r\nexport class ContaineredInput extends Block {\r\n  \r\n  fieldNameLabel: Label;\r\n  \r\n  inputField: Input;\r\n  \r\n  validationLabel: Label;\r\n  \r\n  alwaysShowlabel: boolean;\r\n  \r\n  neverShowlabel: boolean;\r\n  \r\n  constructor(props: blockProperty) {\r\n    const fieldNameLabel = new Label({classes: props.labelClasses || [], textContent: props.placeholder || \"Поле\"});\r\n    if (!props.alwaysShowlabel) {\r\n      fieldNameLabel.hide();\r\n    }\r\n    const inputField = new Input(props);\r\n    const validationLabel = new Label({classes: [\"base-label\", \"warning-label\", ...props.warningLabelClasses || []], textContent: \"\"});\r\n    validationLabel.hide();\r\n    \r\n    super(\"div\", {\r\n      classes: [\r\n        \"input-container\",\r\n        ...(props.containerClasses || [])\r\n      ],\r\n      fieldNameLabel,\r\n      inputField,\r\n      validationLabel\r\n    }, template);\r\n    this.alwaysShowlabel = props.alwaysShowlabel;\r\n    this.neverShowlabel = props.neverShowlabel;\r\n    this.fieldNameLabel = fieldNameLabel;\r\n    const newListeners = Object.assign(props.listeners || {},\r\n      {\r\n        focus: (): void => {\r\n          inputField.focused = true;\r\n          this.checkHideLabel();\r\n          this.validate();\r\n        },\r\n        blur: (e: Event): void => {\r\n          inputField.setProps({value: (e.target as HTMLInputElement).value});\r\n          inputField.focused = false;\r\n          this.checkHideLabel();\r\n          this.validate();\r\n        }\r\n      });\r\n    inputField.setProps({listeners: newListeners});\r\n    this.inputField = inputField;\r\n    this.validationLabel = validationLabel;\r\n  }\r\n  \r\n  componentDidUpdate(oldValue?: string, newValue?: string): boolean {\r\n    if (this.inputField) {\r\n      this.inputField.setProps({value: this.props!.value});\r\n    }\r\n    return oldValue !== newValue;\r\n  }\r\n  \r\n  render(): HTMLElement {\r\n    const templator: Templator = new Templator(template);\r\n    const newElement = templator.compile(this.props);\r\n    this.checkHideLabel();\r\n    return newElement;\r\n  }\r\n  \r\n  checkHideLabel() {\r\n    if (!this.alwaysShowlabel && !this.neverShowlabel && this.fieldNameLabel) {\r\n      this.input.props.value || this.input.focused ? this.fieldNameLabel.show() : this.fieldNameLabel.hide();\r\n    }\r\n  }\r\n  \r\n  validate(): string {\r\n    const warningMessage: string = this.input.validate();\r\n    if (warningMessage) {\r\n      this.validationLabel.setProps({textContent: warningMessage});\r\n      this.validationLabel.show();\r\n    } else {\r\n      this.validationLabel.setProps({textContent: \"\"});\r\n      this.validationLabel.hide();\r\n    }\r\n    return warningMessage;\r\n  }\r\n  \r\n  addListeners(): void {\r\n    if (this.input) {\r\n      this.input.addListeners();\r\n    }\r\n  }\r\n  \r\n  removeListeners(): void {\r\n    if (this.input) {\r\n      this.input.removeListeners();\r\n    }\r\n  }\r\n  \r\n  get input(): Input {\r\n    return this.inputField;\r\n  }\r\n}\r\n","const template = \"<div {{ classes validationLabel inputField fieldNameLabel}}></div>\";\r\n\r\nexport default template;\r\n","import {Block} from \"../block/block\";\r\nimport {blockProperty} from \"../block/types\";\r\nimport {Input} from \"../Input/input\";\r\nimport {ContaineredInput} from \"../containeredInput/containeredInput\";\r\n\r\n\r\nexport class Form extends Block {\r\n  \r\n  constructor(props: blockProperty, template?: string) {\r\n    super(\"form\", props, template);\r\n  }\r\n  \r\n  validate(): boolean {\r\n    const forValidate = Object.values(this.props).filter((item: any) => item instanceof Input\r\n      || item instanceof ContaineredInput);\r\n    let isNotValid: boolean = false;\r\n    for (let i = 0; i < forValidate.length; i++) {\r\n      isNotValid = !!forValidate[i].validate() || isNotValid;\r\n    }\r\n    return isNotValid;\r\n  }\r\n  \r\n}\r\n\r\nexport function getDefaultTextInputClasses() {\r\n  return [\r\n    \"base-input\",\r\n    \"base-input-text\",\r\n    \"sign-text-input\"\r\n  ];\r\n}\r\n","\r\nexport class BaseValidator {\r\n  \r\n  public field: HTMLInputElement;\r\n  \r\n  protected validFncs: {text: string, fn: (value: string) => boolean}[];\r\n  \r\n  constructor(validFncs?: {text: string, fn: (value: string) => boolean}[] ) {\r\n    validFncs = validFncs || [];\r\n    validFncs.push({\r\n      text: \"Заполните поле\",\r\n      fn: (value: string) => {\r\n        return !!value;\r\n      }\r\n    });\r\n    this.validFncs = validFncs;\r\n  }\r\n  \r\n  checkValid(): string | undefined {\r\n    if (this.field) {\r\n      for (let i = 0; i < this.validFncs.length; i++) {\r\n        const current: {text: string, fn: (value: string) => boolean} = this.validFncs[i];\r\n        if (!current.fn(this.field.value)) {\r\n          return current.text;\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n","import {BaseValidator} from \"./BaseValidator\";\r\n\r\nexport class NameValidator extends BaseValidator {\r\n  \r\n  constructor() {\r\n    \r\n    const validFncs: {text: string, fn: (value: string) => boolean}[] = [];\r\n  \r\n    validFncs.push({\r\n      text: \"Первая буква должна быть заглавной\",\r\n      fn: (value: string) => {\r\n        if (!value) {\r\n          return true;\r\n        }\r\n        return value[0] === value[0].toLocaleUpperCase();\r\n      }\r\n    });\r\n  \r\n    validFncs.push({\r\n      text: \"Есть пробелы и/или цифры\",\r\n      fn: (value: string) => {\r\n        return !/[\\d\\s]/.test(value);\r\n      }\r\n    });\r\n  \r\n    validFncs.push({\r\n      text: \"Есть недопустимые символы\",\r\n      fn: (value: string) => {\r\n        return !/[\"'&<>_]/.test(value);\r\n      }\r\n    });\r\n    \r\n    super(validFncs);\r\n  }\r\n  \r\n}\r\n","import {BaseValidator} from \"./BaseValidator\";\r\n\r\n\r\nexport class PasswordValidator extends BaseValidator {\r\n  \r\n  constructor() {\r\n  \r\n    const validFncs: {text: string, fn: (value: string) => boolean}[] = [];\r\n  \r\n    validFncs.push({\r\n      text: \"Длина от 8 до 40 символов\",\r\n      fn: (value: string) => {\r\n        return value.length >= 8 && value.length <= 40;\r\n      }\r\n    });\r\n  \r\n    validFncs.push({\r\n      text: \"Неверный формат пароля (большая буква)\",\r\n      fn: (value: string) => {\r\n        return /[A-ZА-ЯЁ]/.test(value);\r\n      }\r\n    });\r\n  \r\n    validFncs.push({\r\n      text: \"Неверный формат пароля (digit)\",\r\n      fn: (value: string) => {\r\n        return /\\d/.test(value);\r\n      }\r\n    });\r\n    \r\n    super(validFncs);\r\n  }\r\n  \r\n}\r\n","import {BaseValidator} from \"./BaseValidator\";\r\n\r\nexport class LoginValidator extends BaseValidator {\r\n  \r\n  constructor() {\r\n    \r\n    const validFncs: {text: string, fn: (value: string) => boolean}[] = [];\r\n  \r\n    validFncs.push({\r\n      text: \"Нет букв\",\r\n      fn: (value: string) => {\r\n        return /\\w+/.test(value);\r\n      }\r\n    });\r\n    \r\n    validFncs.push({\r\n      text: \"От 3 до 20 символов\",\r\n      fn: (value: string) => {\r\n        return value.length >= 3 && value.length <= 20;\r\n      }\r\n    });\r\n  \r\n    validFncs.push({\r\n      text: \"Только латинница\",\r\n      fn: (value: string) => {\r\n        return !/[а-яёА-ЯЁ]/.test(value);\r\n      }\r\n    });\r\n  \r\n    validFncs.push({\r\n      text: \"Есть спецсимволы или пробел\",\r\n      fn: (value: string) => {\r\n        return !/[\"'&<>\\s]/.test(value);\r\n      }\r\n    });\r\n\r\n    \r\n    super(validFncs);\r\n  }\r\n  \r\n}\r\n","import {BaseValidator} from \"./BaseValidator\";\r\n\r\nexport class PhoneValidator extends  BaseValidator {\r\n  \r\n  constructor() {\r\n  \r\n    const validFncs: {text: string, fn: (value: string) => boolean}[] = [];\r\n  \r\n    validFncs.push({\r\n      text: \"Длина от 10 до 15 символов\",\r\n      fn: (value: string) => {\r\n        return value.length >= 10 && value.length <= 15;\r\n      }\r\n    });\r\n  \r\n    validFncs.push({\r\n      text: \"Неверный формат телефона\",\r\n      fn: (value: string) => {\r\n        return !/\\++\\d+/.test(value);\r\n      }\r\n    });\r\n    \r\n    super(validFncs);\r\n  }\r\n  \r\n}\r\n","import {BaseValidator} from \"./BaseValidator\";\r\n\r\nexport class EmailValidator extends BaseValidator {\r\n  \r\n  constructor() {\r\n  \r\n    const validFncs: {text: string, fn: (value: string) => boolean}[] = [];\r\n  \r\n    validFncs.push({\r\n      text: \"Только латинница\",\r\n      fn: (value: string) => {\r\n        return !/[а-яёА-ЯЁ]/.test(value);\r\n      }\r\n    });\r\n  \r\n    validFncs.push({\r\n      text: \"Неверный формат email\",\r\n      fn: (value: string) => {\r\n        return /[\\w\\d]+@\\w+\\.\\w+/.test(value);\r\n      }\r\n    });\r\n    \r\n    super(validFncs);\r\n  }\r\n}\r\n","import {NameValidator} from \"./NameValidator\";\r\nimport {PasswordValidator} from \"./PasswordValidator\";\r\nimport {LoginValidator} from \"./LoginValidator\";\r\nimport {PhoneValidator} from \"./PhoneValidator\";\r\nimport {BaseValidator} from \"./BaseValidator\";\r\nimport {EmailValidator} from \"./EmailValidator\";\r\n\r\nexport class ValidatorFactory {\r\n  \r\n  static getValidator(field: string) {\r\n    field = field.toLowerCase();\r\n    if (field.includes(\"name\")) {\r\n      return new NameValidator();\r\n    } else if (field.includes(\"password\")) {\r\n      return new PasswordValidator();\r\n    } else if (field.includes(\"login\")) {\r\n      return new LoginValidator();\r\n    } else if (field.includes(\"phone\")) {\r\n      return new PhoneValidator();\r\n    } else if (field.includes(\"email\")) {\r\n      return new EmailValidator();\r\n    } else {\r\n      return new BaseValidator();\r\n    }\r\n  }\r\n  \r\n}\r\n","import {Form, getDefaultTextInputClasses} from \"../../components/form/form\";\r\nimport {ContaineredInput} from \"../../components/containeredInput/containeredInput\";\r\nimport {actionsContainerTemplate, template} from \"./template\";\r\nimport {Container} from \"../../components/container/container\";\r\nimport {blockProperty} from \"../../components/block/types\";\r\nimport {ValidatorFactory} from \"../../utils/Validators/ValidatorFactory\";\r\n\r\nexport class LoginForm extends Form {\r\n  \r\n  constructor(props: blockProperty) {\r\n    const nameInput = new ContaineredInput({\r\n      name: \"login\",\r\n      type: \"text\",\r\n      placeholder: \"Логин\",\r\n      classes: getDefaultTextInputClasses(),\r\n      containerClasses: getDefaultInputContainerClasses(),\r\n      labelClasses: [\r\n        \"base-label\",\r\n        \"login-label\"\r\n      ],\r\n      validator: ValidatorFactory.getValidator(\"login\")\r\n    });\r\n    const passInput = new ContaineredInput({\r\n      name: \"password\",\r\n      type: \"password\",\r\n      placeholder: \"Пароль\",\r\n      classes: getDefaultTextInputClasses(),\r\n      containerClasses: getDefaultInputContainerClasses(),\r\n      labelClasses: [\r\n        \"base-label\",\r\n        \"login-label\"\r\n      ],\r\n      validator: ValidatorFactory.getValidator(\"password\")\r\n    });\r\n    const actionContainer = new Container(\r\n      {classes: [\"login-form__action-container\", \"sign-action-container\"], link: props.link, btn: props.btn},\r\n      actionsContainerTemplate);\r\n    super({classes: [\"base-form\", \"sign-form\", \"login-form\"], actionContainer, passInput, nameInput,\r\n      listeners: props.listeners}, template);\r\n  }\r\n}\r\n\r\nfunction getDefaultInputContainerClasses(): string[] {\r\n  return [\"sign-input-container\"];\r\n}\r\n","export const template = \"<form {{ classes actionContainer passInput nameInput}} ></form>\";\r\n\r\nexport const actionsContainerTemplate: string  = \"<div {{ classes link btn }}></div>\";\r\n","import {Block} from \"../../components/block/block\";\r\nimport {Container} from \"../../components/container/container\";\r\nimport {blockProperty} from \"../../components/block/types\";\r\nimport {renderPopup} from \"../../utils/render\";\r\nimport {bodyMaskTemplate} from \"./template\";\r\n\r\nimport \"./style.scss\";\r\n\r\n\r\nexport class Popup extends Block {\r\n  \r\n  popupContainer: Container;\r\n  \r\n  constructor(props: blockProperty) {\r\n    \r\n    const popupContainer: Container = props.popupContainer;\r\n    \r\n    const body: HTMLElement | null = document.querySelector(\"body\");\r\n    if (body) {\r\n      body.style.overflow = \"hidden\";\r\n    }\r\n    super(\"div\", {\r\n      classes: [\"body-mask\"],\r\n      popupContainer,\r\n      listeners: {\r\n        click: () => {\r\n          this.hide();\r\n        }\r\n      }\r\n    }, bodyMaskTemplate);\r\n    \r\n    this.popupContainer = popupContainer;\r\n  }\r\n  \r\n  get container() {\r\n    return this.popupContainer;\r\n  }\r\n  \r\n  show() {\r\n    const body: HTMLElement | null = document.querySelector(\"body\");\r\n    if (body) {\r\n      body.style.overflow = \"hidden\";\r\n    }\r\n    renderPopup(this);\r\n  }\r\n  \r\n  hide() {\r\n    const body: HTMLElement | null = document.querySelector(\"body\");\r\n    if (body) {\r\n      body.style.overflow = \"visible\";\r\n    }\r\n    this.getContent().remove();\r\n  }\r\n  \r\n}\r\n","export const bodyMaskTemplate = \"<div {{ classes popupContainer }}></div>\";\r\n","import {Block} from \"../../components/block/block\";\r\nimport {authLinkTemplate, loginErrorContainerTemplate, template} from \"./template\";\r\nimport {Label} from \"../../components/label/label\";\r\nimport {Container} from \"../../components/container/container\";\r\nimport {LoginForm} from \"../../modules/loginForm/loginForm\";\r\nimport {Input} from \"../../components/Input/input\";\r\nimport {Form} from \"../../components/form/form\";\r\nimport {Router} from \"../../utils/RouteUtils/Router\";\r\nimport {Popup} from \"../../modules/popup/popup\";\r\nimport {LoginFormModel} from \"./types\";\r\n\r\nexport default class LoginPage extends Block {\r\n  \r\n  private form: Form;\r\n  \r\n  constructor() {\r\n    const label = new Label({classes: [\"form-header\"], textContent: \"Вход\"});\r\n    const link = new Block(\"a\", {\r\n      classes: [\r\n        \"base-link\",\r\n        \"sign-link\"\r\n      ],\r\n      href: \"/\",\r\n      textContent: \"Нет аккаунта?\"\r\n    }, authLinkTemplate);\r\n    const btn = new Input({\r\n      type: \"submit\",\r\n      value: \"Авторизоваться\",\r\n      listeners: {\r\n        click: function () {}\r\n      },\r\n      classes: [\r\n        \"base-input\",\r\n        \"base-input-button\",\r\n        \"sign-btn\",\r\n        \"action-container__autorize-btn\"\r\n      ]\r\n    });\r\n    const form = new LoginForm({link, btn});\r\n    const mainBlock: Container = new Container({classes: [\"login-block\", \"main-block\"], label, form});\r\n\r\n    super(\"div\", {mainBlock}, template);\r\n    \r\n    form.setProps({listeners: {submit: this.onLoginSubmit.bind(this)}});\r\n    link.setProps({listeners: this.getLinkListener()});\r\n    this.form = form;\r\n    this.eventBus.on(\"loginError\", (errorText: string) => this.onLoginError(errorText));\r\n  }\r\n  \r\n  getLinkListener(): Record<string, (e: Event) => void> {\r\n    return {\r\n      click: (e: Event) => {\r\n        e.preventDefault();\r\n        const router = new Router(\"body\");\r\n        router.go(\"/sign-up\");\r\n      }\r\n    };\r\n  }\r\n  \r\n  onLoginSubmit(e: Event): void {\r\n    e.preventDefault();\r\n    const form: HTMLFormElement = e.target as HTMLFormElement;\r\n    const data:LoginFormModel = {login: form.login.value, password: form.password.value};\r\n    const isNotValid = this.form.validate();\r\n    if (!isNotValid) {\r\n      this.eventBus.emit(\"formSubmit\", data);\r\n    }\r\n  }\r\n  \r\n  onLoginError(errorText: string) {\r\n    const loginErrorLabel: Label = new Label({\r\n      textContent: errorText\r\n    });\r\n    const loginErrorBtn = new Input({\r\n      value: \"OK\",\r\n      classes: [\r\n        \"popup-btn\",\r\n        \"base-input-button\",\r\n        \"sign-btn\"\r\n      ],\r\n      listeners: {\r\n        click: () => {\r\n          loginErrorMessage.hide();\r\n        }\r\n      }\r\n    });\r\n    const loginErrorPopup: Container = new Container({\r\n      classes: [\r\n        \"main-block\",\r\n        \"change-avatar-popup\"\r\n      ],\r\n      listeners: {\r\n        click: (e: Event) => {\r\n          e.cancelBubble = true;\r\n        }\r\n      },\r\n      loginErrorLabel,\r\n      loginErrorBtn\r\n    }, loginErrorContainerTemplate);\r\n    const loginErrorMessage = new Popup({popupContainer: loginErrorPopup});\r\n    loginErrorMessage.show();\r\n  }\r\n}\r\n","export const template = \"<div {{ classes mainBlock form }} ></div>\";\r\n\r\nexport const authLinkTemplate: string  = \"<a {{ classes textContent href }}></a>\";\r\n\r\n\r\nexport const loginErrorContainerTemplate: string  = \"<div {{ classes textContent loginErrorBtn loginErrorLabel }}></div>\";\r\n","export class BaseAPI {\r\n\r\n  create() { throw new Error(\"Not implemented\"); }\r\n  \r\n  request() { throw new Error(\"Not implemented\"); }\r\n  \r\n  update() { throw new Error(\"Not implemented\"); }\r\n  \r\n  delete() { throw new Error(\"Not implemented\"); }\r\n}","export type PlainObject<T = unknown> = {\r\n  [k in string]: T;\r\n};\r\n\r\nfunction isPlainObject(value: unknown): value is PlainObject {\r\n  return typeof value === \"object\"\r\n    && value !== null\r\n    && value.constructor === Object\r\n    && Object.prototype.toString.call(value) === \"[object Object]\";\r\n}\r\n\r\nfunction isArray(value: unknown): value is [] {\r\n  return Array.isArray(value);\r\n}\r\n\r\nfunction isArrayOrObject(value: unknown): value is [] | PlainObject {\r\n  return isPlainObject(value) || isArray(value);\r\n}\r\n\r\nfunction getKey(key: string, parentKey?: string) {\r\n  return parentKey ? `${parentKey}[${key}]` : key;\r\n}\r\n\r\nfunction getParams(data: PlainObject | [], parentKey?: string) {\r\n  const result: [string, string][] = [];\r\n  \r\n  for(const [key, value] of Object.entries(data)) {\r\n    if (isArrayOrObject(value)) {\r\n      result.push(...getParams(value, getKey(key, parentKey)));\r\n    } else {\r\n      result.push([getKey(key, parentKey), encodeURIComponent(String(value))]);\r\n    }\r\n  }\r\n  \r\n  return result;\r\n}\r\n\r\nexport function queryString(data: PlainObject) {\r\n  if (!isPlainObject(data)) {\r\n    throw new Error(\"input must be an object\");\r\n  }\r\n  \r\n  return getParams(data).map(arr => arr.join(\"=\")).join(\"&\");\r\n} ","import {PlainObject, queryString} from \"./queryString\";\r\n\r\nenum METHODS {\r\n  GET = \"GET\",\r\n  POST = \"POST\",\r\n  PUT = \"PUT\",\r\n  DELETE = \"DELETE\"\r\n}\r\n\r\ntype XHRHeader = Record<string, string>\r\n\r\ninterface XHROptions {\r\n  data?: object,\r\n  form?: FormData,\r\n  credentials?: string,\r\n  mode?: string,\r\n  headers?:  XHRHeader,\r\n  timeout?: number,\r\n  method?: METHODS | string\r\n}\r\n\r\ninterface FetchOptions extends XHROptions {\r\n  retries: number\r\n}\r\n\r\nexport class HTTPTransport {\r\n  \r\n  baseUrl: string;\r\n  \r\n  constructor(baseUrl?: string) {\r\n    this.baseUrl = baseUrl || \"\";\r\n  }\r\n  \r\n  get = (url: string, options: XHROptions = {}) => {\r\n    if (options.data && Object.keys(options.data).length) {\r\n      url += queryString(options.data as PlainObject);\r\n      delete options.data;\r\n    }\r\n    return this.request(url, {...options, method: METHODS.GET}, options.timeout);\r\n  };\r\n  \r\n  put = (url: string, options: XHROptions = {}) => {\r\n    return this.request(url, {...options, method: METHODS.PUT}, options.timeout);\r\n  };\r\n  \r\n  post = (url: string, options: XHROptions = {}) => {\r\n    return this.request(url, {...options, method: METHODS.POST}, options.timeout);\r\n  };\r\n  \r\n  delete = (url: string, options: XHROptions = {}) => {\r\n    return this.request(url, {...options, method: METHODS.DELETE}, options.timeout);\r\n  };\r\n  \r\n  request = (url: string, options: XHROptions, timeout:number = 5000) => {\r\n    return new Promise((resolve, reject) => {\r\n      const {method, data, headers, form} = options;\r\n      const xhr = new XMLHttpRequest();\r\n      xhr.open(options.method as string, this.baseUrl + url);\r\n      if (headers) {\r\n        Object.entries(headers).forEach(([key, value]) => {\r\n          xhr.setRequestHeader(key, value);\r\n        });\r\n      }\r\n      if (options.credentials === \"include\") {\r\n        xhr.withCredentials = true;\r\n      }\r\n      \r\n      xhr.onload = function () {\r\n        resolve(xhr);\r\n      };\r\n      \r\n      const handleError = () => {\r\n        reject(new Error(\"Ошибка запроса\"));\r\n      };\r\n      \r\n      xhr.onabort = handleError;\r\n      xhr.onerror = handleError;\r\n      xhr.ontimeout = handleError;\r\n      if (form) {\r\n        xhr.send(form);\r\n      } else if (method === METHODS.GET || !data ) {\r\n        xhr.send();\r\n      } else {\r\n        xhr.send(JSON.stringify(data));\r\n      }\r\n      setTimeout( () => {\r\n        reject(new Error(\"timeout\"));\r\n      }, timeout);\r\n    });\r\n  };\r\n}\r\n\r\n// eslint-disable-next-line no-unused-vars\r\nexport function fetchWithRetry(url: string, options: FetchOptions): any {\r\n  if (options && options.retries && options.retries > 1) {\r\n    const req = new HTTPTransport();\r\n    return req.get(url, options).then(\r\n      (response) => {\r\n        return response;\r\n      },\r\n      () => {\r\n        options.retries--;\r\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n        return fetchWithRetry(url, options);\r\n      }\r\n    );\r\n  } else {\r\n    throw new Error(\"Нет попыток\");\r\n  }\r\n}\r\n","import {BaseAPI} from \"./BaseApi\";\r\nimport {HTTPTransport} from \"../XHR\";\r\nimport ApplicationStore from \"../../modules/ApplicationState/ApplicationStore\";\r\nimport {User} from \"../../models/User\";\r\n\r\nconst HTTP = new HTTPTransport(\"https://ya-praktikum.tech/api/v2/\");\r\n\r\nexport class UserApi extends BaseAPI {\r\n  public static getUser() {\r\n    return HTTP.get(\"auth/user\",\r\n      {\r\n        credentials: \"include\",\r\n        mode: \"cors\",\r\n        headers: {\r\n          \"content-type\": \"application/json\",\r\n        }\r\n      })\r\n      .then((result: XMLHttpRequest) => {\r\n        let user: User | null = null;\r\n        if (result.status === 200) {\r\n          user = JSON.parse(result.responseText);\r\n        }\r\n        ApplicationStore.set(\"user\", user);\r\n      });\r\n  }\r\n  \r\n  public static logout() {\r\n    return HTTP.post(\"auth/logout\",\r\n      {\r\n        credentials: \"include\",\r\n        mode: \"cors\",\r\n        headers: {\r\n          \"content-type\": \"application/json\",\r\n        }\r\n      })\r\n      .then(() => {\r\n        ApplicationStore.set(\"user\", null);\r\n      });\r\n  }\r\n}","import {BaseAPI} from \"./BaseApi\";\r\nimport {HTTPTransport} from \"../XHR\";\r\nimport {LoginFormModel} from \"../../pages/login/types\";\r\nimport {UserApi} from \"./UserApi\";\r\n\r\nconst HTTP = new HTTPTransport(\"https://ya-praktikum.tech/api/v2/\");\r\n\r\nexport class LoginPageApi extends BaseAPI {\r\n  public login(user: LoginFormModel) {\r\n    return HTTP.post(\"auth/signin\",\r\n      {\r\n        credentials: \"include\",\r\n        mode: \"cors\",\r\n        headers: {\r\n          \"content-type\": \"application/json\",\r\n        },\r\n        data: user,\r\n      })\r\n      .then((result: XMLHttpRequest) => {\r\n        if (result.status === 200) {\r\n          UserApi.getUser();\r\n        }\r\n      });\r\n  }\r\n}","import {BaseController} from \"./BaseController\";\r\nimport LoginPage from \"../pages/login/login\";\r\nimport {LoginFormModel} from \"../pages/login/types\";\r\nimport {LoginPageApi} from \"../utils/API/LoginPageApi\";\r\nimport ApplicationStore, {StoreEvents} from \"../modules/ApplicationState/ApplicationStore\";\r\nimport {Router} from \"../utils/RouteUtils/Router\";\r\n\r\nconst loginPageApi = new LoginPageApi();\r\n\r\nexport default class LoginPageController extends BaseController{\r\n  \r\n  currentState: string = \"login\";\r\n  \r\n  constructor() {\r\n    super(new LoginPage());\r\n    this.view.eventBus.on(\"formSubmit\", (data: LoginFormModel) => this.onFormSubmit(data));\r\n    ApplicationStore.on(StoreEvents.Updated, (path: string, value: any) => this.onApplicationStoreUpdate(path, value));\r\n  }\r\n  \r\n  onApplicationStoreUpdate(path: string, value: any) {\r\n    if (path === \"user\" && value && value.id) {\r\n      this.onChangeUser();\r\n    }\r\n    if (path === \"loginError\") {\r\n      this.view.eventBus.emit(\"loginError\", value);\r\n    }\r\n  }\r\n  \r\n  onChangeUser() {\r\n    const router = new Router(\"body\");\r\n    router.go(\"/messenger\");\r\n  }\r\n  \r\n  onFormSubmit(data: LoginFormModel): void {\r\n    try {\r\n      loginPageApi.login(data);\r\n    } catch (e) {\r\n      ApplicationStore.set(\"loginError\", e);\r\n    }\r\n  }\r\n}\r\n","import {Block} from \"../../components/block/block\";\r\nimport {Container} from \"../../components/container/container\";\r\nimport {\r\n  actionsContainerTemplate,\r\n  avatarWrapperTemplate,\r\n  backButtonContainerTemplate,\r\n  changeAvatarTemplate,\r\n  changePassFormTemplate,\r\n  contentWrapperTemplate,\r\n  profileContainerTemplate,\r\n  profileFormTemplate,\r\n  template\r\n} from \"./template\";\r\nimport {imgTemplate} from \"../../components/block/template\";\r\nimport {Form} from \"../../components/form/form\";\r\nimport {blockProperty} from \"../../components/block/types\";\r\nimport {ContaineredInput} from \"../../components/containeredInput/containeredInput\";\r\nimport {ProfilePageEvents, ProfileStates} from \"../../controllers/ProfilePageController\";\r\nimport {Input} from \"../../components/Input/input\";\r\nimport {Popup} from \"../../modules/popup/popup\";\r\nimport {Label} from \"../../components/label/label\";\r\nimport {ValidatorFactory} from \"../../utils/Validators/ValidatorFactory\";\r\n\r\nimport \"./style.scss\";\r\nimport {Router} from \"../../utils/RouteUtils/Router\";\r\nimport ApplicationStore, {StoreEvents} from \"../../modules/ApplicationState/ApplicationStore\";\r\nimport get from \"../../utils/get\";\r\n\r\nconst baseYaUrl: string = \"https://ya-praktikum.tech/api/v2\";\r\n\r\nexport class ProfilePage extends Block {\r\n  \r\n  private contentWrapper: Container;\r\n  \r\n  private profileForm: Form;\r\n  \r\n  private changePassForm: Form;\r\n  \r\n  private avatarImg: Container;\r\n  \r\n  private profileFormItems: Record<string, ContaineredInput>;\r\n  \r\n  constructor() {\r\n    const state = ApplicationStore.getState();\r\n    const backButton: Container = new Container({\r\n      classes: [\"back-btn-container__back-btn\"],\r\n      textContent: \"❮\",\r\n      listeners: {\r\n        click: () => {\r\n          const router = new Router(\"body\");\r\n          router.go(\"/messenger\");\r\n        }\r\n      }\r\n    });\r\n    const backBtnContainer: Container = new Container({\r\n      classes: [\"back-btn-container\"],\r\n      backButton\r\n    }, backButtonContainerTemplate);\r\n    \r\n    //region AvatarPopups\r\n    const changeAvatarTitle: Label = new Label({\r\n      textContent: \"Загрузите файл\"\r\n    });\r\n    const changeAvatarLink = new Input({\r\n      textContent: \"Выбрать файл на компьютере\",\r\n      type: \"file\",\r\n      name: \"avatar\",\r\n      classes: [\"popup-link\"],\r\n      listeners: {\r\n        click: (e: Event) => {\r\n          e.cancelBubble = true;\r\n        }\r\n      }\r\n    });\r\n    const changeAvatarButton = new Input({\r\n      value: \"Изменить аватар\",\r\n      type: \"submit\",\r\n      classes: [\r\n        \"popup-button\",\r\n        \"base-input-button\",\r\n        \"sign-btn\"\r\n      ],\r\n      listeners: {\r\n        click: (e: Event) => {\r\n          e.cancelBubble = true;\r\n        }\r\n      }\r\n    });\r\n    const changeAvaparPopupContainer: Form = new Form({\r\n      classes: [\r\n        \"main-block\",\r\n        \"change-avatar-popup\"\r\n      ],\r\n      listeners: {\r\n        click: (e: Event) => {\r\n          e.cancelBubble = true;\r\n        },\r\n        submit: (e: Event) => {\r\n          e.cancelBubble = true;\r\n          e.preventDefault();\r\n          let data = new FormData(e.target as HTMLFormElement);\r\n          const newAv = data.get(\"avatar\");\r\n          if ((newAv as File).size) {\r\n            this.eventBus.emit(ProfilePageEvents.CHANGE_AVATAR, data);\r\n          }\r\n        }\r\n      },\r\n      changeAvatarTitle,\r\n      changeAvatarLink,\r\n      changeAvatarButton\r\n    }, changeAvatarTemplate);\r\n    //endregion AvatarPopups\r\n    \r\n    //region avatar\r\n    const img: Block = new Block(\"img\", {classes: [\"avatar\"]}, imgTemplate);\r\n    \r\n    const avatarSrc = get(state, \"user.avatar\");\r\n    if (avatarSrc) {\r\n      img.setProps({src: baseYaUrl + avatarSrc});\r\n    }\r\n    const newAvatar: Container = new Container({\r\n      classes: [\"new-avatar\"], textContent: \"Изменить аватар\",\r\n      listeners: {\r\n        click: () => {\r\n          const changeAvatarPopup = new Popup({popupContainer: changeAvaparPopupContainer});\r\n          changeAvatarPopup.show();\r\n        }\r\n      }\r\n    });\r\n    const avatarWrapper: Container = new Container({classes: [\"avatar-wrapper\"], img, newAvatar},\r\n      avatarWrapperTemplate);\r\n    //endregion avatar\r\n    const displayName = get(state, \"user.display_name\");\r\n    const nameLabel: Container = new Container({classes: [\"name-label\"], textContent: displayName || \"\" });\r\n    \r\n    const {form, items: profileFormItems}: Record<string, any> = getProfileForm(false);\r\n    \r\n    const contentWrapper: Container = new Container({\r\n      classes: [\"content-wrapper\"],\r\n      avatarWrapper,\r\n      nameLabel,\r\n      profileForm: form\r\n    }, contentWrapperTemplate);\r\n    \r\n    const profileContainer: Container = new Container({\r\n      classes: [\"profile-container\"],\r\n      contentWrapper\r\n    }, profileContainerTemplate);\r\n    \r\n    \r\n    super(\"div\", {\r\n      classes: [\"page-wrapper\"],\r\n      backBtnContainer,\r\n      profileContainer\r\n    }, template);\r\n    \r\n    this.profileFormItems = profileFormItems;\r\n    this.contentWrapper = contentWrapper;\r\n    const actionsContainer = this.getActionContainer(this.getPreviewActionContainerItems());\r\n    form.setProps({\r\n      listeners: {\r\n        submit: function (e: Event) {\r\n          const items: Record<string, string> = Array.prototype.reduce.call((e.target as HTMLFormElement).elements,\r\n            (res: Record<string, string>, {name, value}: { name: string, value: string }) => {\r\n              if (name && value) {\r\n                res[name] = value;\r\n              }\r\n              return res;\r\n            }, {});\r\n          const isNotValid = form.validate();\r\n          if (!isNotValid) {\r\n            this.eventBus.emit(ProfilePageEvents.CHANGE_DATA, items);\r\n            const actionsContainer: Container = this.getActionContainer(this.getPreviewActionContainerItems());\r\n            this.setInputsDisable(true);\r\n            this.profileForm.setProps({actionsContainer});\r\n          }\r\n          e.preventDefault();\r\n        }.bind(this)\r\n      }\r\n    });\r\n    this.profileForm = form;\r\n    this.profileForm.setProps({actionsContainer});\r\n    this.avatarImg = img;\r\n    this.submit();\r\n  }\r\n  \r\n  submit() {\r\n    ApplicationStore.on(StoreEvents.Updated, (path: string, value: any) => this.onChangeUserData(path, value));\r\n  }\r\n  \r\n  onChangeUserData(path: string, value: any) {\r\n    if (path === \"user\" && value?.id) {\r\n      const {form, items: profileFormItems}: Record<string, any> = getProfileForm(false);\r\n      this.profileFormItems = profileFormItems;\r\n      this.profileForm = form;\r\n      this.contentWrapper.setProps({form: this.profileForm});\r\n      this.contentWrapper.props.nameLabel.setProps({textContent: value.display_name || \"\"});\r\n      this.avatarImg.setProps({src: baseYaUrl + value.avatar});\r\n    }\r\n  }\r\n  \r\n  getActionContainer(actions: Record<string, Input>): Container {\r\n    return new Container({\r\n      classes: [\r\n        \"profile-form__action-container\",\r\n        \"profile-action-container\"\r\n      ], ...actions\r\n    }, actionsContainerTemplate);\r\n  }\r\n  \r\n  getPreviewActionContainerItems(): Record<string, Input> {\r\n    const changeDataButton = this.getProfileActionButton(\"Изменить данные\",\r\n      [\r\n        \"main-profile-btn\",\r\n        \"action-container__change-data-btn\"\r\n      ],\r\n      \"button\",\r\n      this.onChangeDataClick);\r\n    \r\n    const changePassButton = this.getProfileActionButton(\"Изменить пароль\",\r\n      [\r\n        \"main-profile-btn\",\r\n        \"action-container__change-password-btn\"\r\n      ],\r\n      \"button\",\r\n      this.onChangePassButtonClick);\r\n    \r\n    const exitButton = this.getProfileActionButton(\"Выйти\",\r\n      [\r\n        \"main-profile-btn\",\r\n        \"action-container__exit-btn\"\r\n      ],\r\n      \"button\",\r\n      () => {\r\n        this.eventBus.emit(ProfilePageEvents.LOGOUT);\r\n      });\r\n    return {\r\n      changeDataButton,\r\n      changePassButton,\r\n      exitButton\r\n    };\r\n  }\r\n  \r\n  getChangeDataActionsContainer(): Record<string, Input> {\r\n    const saveDataButton: Input = this.getProfileActionButton(\r\n      \"Сохранить\",\r\n      [\"sign-btn\", \"action-container__save-data-btn\"],\r\n      \"submit\");\r\n    return {saveDataButton};\r\n  }\r\n  \r\n  getChangePassActionsContainer(): Record<string, Input> {\r\n    const saveDataButton: Input = this.getProfileActionButton(\r\n      \"Сохранить\",\r\n      [\"sign-btn\", \"action-container__save-data-btn\"],\r\n      \"submit\");\r\n    return {saveDataButton};\r\n  }\r\n  \r\n  onChangeDataClick(): void {\r\n    this.eventBus.emit(ProfilePageEvents.CHANGE_STATE, ProfileStates.ChangeInfo);\r\n    this.setInputsDisable(false);\r\n    const actionsContainer: Container = this.getActionContainer(this.getChangeDataActionsContainer());\r\n    this.profileForm.setProps({actionsContainer});\r\n  }\r\n  \r\n  onChangePassButtonClick(): void {\r\n    this.eventBus.emit(ProfilePageEvents.CHANGE_STATE, ProfileStates.ChangePass);\r\n    if (!this.changePassForm) {\r\n      const {form/*, items*/} = getChangePasswordForm();\r\n      form.setProps({\r\n        actionsContainer: this.getActionContainer(this.getChangePassActionsContainer()),\r\n        listeners: {\r\n          submit: function (e: Event) {\r\n            const items: Record<string, string> = Array.prototype.reduce.call((e.target as HTMLFormElement).elements,\r\n              (res: Record<string, string>, {name, value}: { name: string, value: string }) => {\r\n                if (name && value) {\r\n                  res[name] = value;\r\n                }\r\n                return res;\r\n              }, {});\r\n            \r\n            const isNotValid = form.validate();\r\n            if (!isNotValid) {\r\n              this.eventBus.emit(ProfilePageEvents.CHANGE_PASSWORD, items);\r\n              this.changePassForm.hide();\r\n              this.profileForm.show();\r\n            }\r\n            e.preventDefault();\r\n          }.bind(this)\r\n        }\r\n      });\r\n      this.changePassForm = form;\r\n      //this.changePassFormItems = items;\r\n      this.contentWrapper.setProps({changePassForm: this.changePassForm});\r\n    }\r\n    this.profileForm.hide();\r\n    this.changePassForm.show();\r\n  }\r\n  \r\n  setInputsDisable(disabled: boolean): void {\r\n    if (this.profileFormItems) {\r\n      Object.values(this.profileFormItems).forEach((item => item.input.setProps({disabled: disabled ? \"disabled\" : \"false\"})));\r\n    }\r\n  }\r\n  \r\n  // eslint-disable-next-line max-params\r\n  getProfileActionButton(value: string, additionalClasses: string[] = [], type: string = \"button\", clickHandler?: () => void): Input {\r\n    let config: blockProperty = {\r\n      type: type,\r\n      value: value,\r\n      classes: [\r\n        \"base-input-button\",\r\n        \"base-input\",\r\n        ...additionalClasses\r\n      ]\r\n    };\r\n    if (clickHandler) {\r\n      config = Object.assign(config, {\r\n        listeners: {\r\n          click: clickHandler.bind(this)\r\n        }\r\n      });\r\n    }\r\n    return new Input(config);\r\n  }\r\n}\r\n\r\nfunction getProfileForm(enabled: boolean): { form: Form, items: Record<string, ContaineredInput> } {\r\n  const {user} = ApplicationStore.getState();\r\n  const email: ContaineredInput = getFormItem(\"email\", \"string\", \"Почта\", enabled, user!.email);\r\n  const login: ContaineredInput = getFormItem(\"login\", \"string\", \"Логин\", enabled, user!.login);\r\n  const firstName: ContaineredInput = getFormItem(\"first_name\", \"string\", \"Имя\", enabled, user!.first_name);\r\n  const secondName: ContaineredInput = getFormItem(\"second_name\", \"string\", \"Фамилия\", enabled, user!.second_name);\r\n  const displayName: ContaineredInput = getFormItem(\"display_name\", \"string\", \"Имя в чате\", enabled, user!.display_name);\r\n  const phone: ContaineredInput = getFormItem(\"phone\", \"string\", \"Телефон\", enabled, user!.phone);\r\n  const form: Form = new Form({\r\n    classes: [\r\n      \"profile-form\",\r\n      \"base-form\"\r\n    ],\r\n    email,\r\n    login,\r\n    firstName,\r\n    secondName,\r\n    displayName,\r\n    phone\r\n  }, profileFormTemplate);\r\n  return {\r\n    form,\r\n    items: {email, login, firstName, secondName, displayName, phone}\r\n  };\r\n}\r\n\r\nfunction getChangePasswordForm(): { form: Form, items: Record<string, ContaineredInput> } {\r\n  const oldPass: ContaineredInput = getFormItem(\"oldPassword\", \"password\", \"Старый пароль\", true);\r\n  const newPass: ContaineredInput = getFormItem(\"newPassword\", \"password\", \"Новый пароль\", true);\r\n  const newPassConfirmation: ContaineredInput = getFormItem(\"newPasswordConf\", \"password\", \"Повторите пароль\", true);\r\n  const form: Form = new Form({\r\n    classes: [\r\n      \"profile-form\",\r\n      \"base-form\"\r\n    ],\r\n    oldPass,\r\n    newPass,\r\n    newPassConfirmation\r\n  }, changePassFormTemplate);\r\n  return {\r\n    form,\r\n    items: {oldPass, newPass, newPassConfirmation}\r\n  };\r\n}\r\n\r\n// eslint-disable-next-line max-params\r\nfunction getFormItem(name: string, type: string, placeholder: string, enabled: boolean = true, value: string = \"\") {\r\n  let instance: ContaineredInput;\r\n  const config: blockProperty = {\r\n    containerClasses: getDefaultInputContainerClasses(),\r\n    labelClasses: getDefaultInputLabelClasses(),\r\n    warningLabelClasses: getDefaultWarningLabelClasses(),\r\n    alwaysShowlabel: true,\r\n    name: name,\r\n    type: type,\r\n    placeholder: placeholder,\r\n    classes: [\r\n      \"profile-text-input\",\r\n      \"base-input\",\r\n      \"base-input-text\"\r\n    ],\r\n    validator:  ValidatorFactory.getValidator(name)\r\n  };\r\n  if (value) {\r\n    Object.assign(config, {value: value});\r\n  }\r\n  if (!enabled) {\r\n    Object.assign(config, {disabled: \"disabled\"});\r\n  }\r\n  instance = new ContaineredInput(config);\r\n  return instance;\r\n}\r\n\r\nfunction getDefaultInputContainerClasses() {\r\n  return [\r\n    \"input-container\",\r\n    \"profile-input-container\"\r\n  ];\r\n}\r\n\r\nfunction getDefaultInputLabelClasses() {\r\n  return [\r\n    \"profile-input-label\"\r\n  ];\r\n}\r\n\r\nfunction getDefaultWarningLabelClasses() {\r\n  return [\r\n    \"profile-warning-label\"\r\n  ];\r\n}\r\n","export const backButtonContainerTemplate = \"<div {{ classes backButton }}></div>\";\r\n\r\nexport const avatarWrapperTemplate = \"<div {{ classes newAvatar img }}></div>\";\r\n\r\nexport const contentWrapperTemplate =  \"<div {{ classes profileForm changePassForm nameLabel avatarWrapper }}></div>\";;\r\n\r\nexport const profileContainerTemplate = \"<div {{ classes contentWrapper }}></div>\";\r\n\r\nexport const profileFormTemplate = \"<form {{ classes actionsContainer phone displayName secondName firstName login email }}></form>\";\r\n\r\nexport const changePassFormTemplate = \"<form {{ classes actionsContainer newPassConfirmation newPass oldPass }}></form>\";\r\n\r\nexport const actionsContainerTemplate = \"<div {{ classes exitButton changePassButton changeDataButton saveDataButton \" +\r\n  \"  }}></div>\";\r\n\r\nexport const changeAvatarTemplate = \"<form {{ classes changeAvatarButton changeAvatarLink changeAvatarTitle }}></form>\";\r\n\r\nexport const template = \"<div {{ classes profileContainer backBtnContainer }}></div>\";\r\n","export const linkTemplate = \"<a {{ classes textContent href }}></a>\";\r\n\r\nexport const imgTemplate = \"<img {{ classes src }}></img>\";\r\n","import {BaseAPI} from \"./BaseApi\";\r\nimport {HTTPTransport} from \"../XHR\";\r\nimport {UserApi} from \"./UserApi\";\r\nimport {User} from \"../../models/User\";\r\nimport {changePasswordRequest} from \"./types\";\r\n\r\nconst HTTP = new HTTPTransport(\"https://ya-praktikum.tech/api/v2/\");\r\n\r\nexport class ProfilePageApi extends BaseAPI {\r\n  public changeData(user: User) {\r\n    return HTTP.put(\"user/profile\",\r\n      {\r\n        credentials: \"include\",\r\n        mode: \"cors\",\r\n        headers: {\r\n          \"content-type\": \"application/json\",\r\n        },\r\n        data: user,\r\n      })\r\n      .then((result: XMLHttpRequest) => {\r\n        if (result.status === 200) {\r\n          UserApi.getUser();\r\n        }\r\n      });\r\n  }\r\n  \r\n  public changhePassword(passwordRequest: changePasswordRequest) {\r\n    return HTTP.put(\"user/password\",\r\n      {\r\n        credentials: \"include\",\r\n        mode: \"cors\",\r\n        headers: {\r\n          \"content-type\": \"application/json\",\r\n        },\r\n        data: passwordRequest\r\n      });\r\n  }\r\n  \r\n  public changeAvatar(avatar: FormData) {\r\n    return HTTP.put(\"user/profile/avatar\",\r\n      {\r\n        credentials: \"include\",\r\n        mode: \"cors\",\r\n        form: avatar\r\n      });\r\n  }\r\n}\r\n  \r\n\r\n","import {BaseController} from \"./BaseController\";\r\n\r\nimport {ProfilePage} from \"../pages/newprofile/profile\";\r\nimport {UserApi} from \"../utils/API/UserApi\";\r\nimport {User} from \"../models/User\";\r\nimport {ProfilePageApi} from \"../utils/API/ProfileApi\";\r\nimport {changePasswordRequest} from \"../utils/API/types\";\r\n\r\nexport const enum ProfileStates {\r\n  Preview = \"preview\",\r\n  ChangeInfo = \"changeInfo\",\r\n  ChangePass = \"changePass\"\r\n}\r\n\r\nexport enum ProfilePageEvents {\r\n  CHANGE_STATE = \"changeState\",\r\n  CHANGE_DATA = \"changeData\",\r\n  CHANGE_PASSWORD = \"changePassword\",\r\n  CHANGE_AVATAR = \"changeAvatar\",\r\n  LOGOUT = \"logout\"\r\n}\r\n\r\nconst profilePageApi = new ProfilePageApi();\r\n\r\nexport class ProfilePageController extends BaseController {\r\n  \r\n  currentState: string;\r\n  \r\n  constructor() {\r\n    super(new ProfilePage());\r\n    this.currentState = ProfileStates.Preview;\r\n    this.submit();\r\n  }\r\n  \r\n  submit() {\r\n    this.view.eventBus.on(ProfilePageEvents.CHANGE_STATE, (state: ProfileStates) => this.setState(state));\r\n    this.view.eventBus.on(ProfilePageEvents.CHANGE_DATA, (user: User) => this.changeUserData(user));\r\n    this.view.eventBus.on(ProfilePageEvents.CHANGE_PASSWORD, (passwordRequest: changePasswordRequest) => this.changeUserPassword(passwordRequest));\r\n    this.view.eventBus.on(ProfilePageEvents.CHANGE_AVATAR, (changeAvatarData: FormData) => this.changeAvatar(changeAvatarData));\r\n    this.view.eventBus.on(ProfilePageEvents.LOGOUT, () => UserApi.logout());\r\n  }\r\n  \r\n  setState(state: ProfileStates) {\r\n    this.currentState = state;\r\n  }\r\n  \r\n  changeUserData(user: User) {\r\n    profilePageApi.changeData(user);\r\n    this.setState(ProfileStates.Preview);\r\n  }\r\n  \r\n  changeUserPassword(passwordRequest: changePasswordRequest) {\r\n    profilePageApi.changhePassword(passwordRequest);\r\n    this.setState(ProfileStates.Preview);\r\n  }\r\n  \r\n  changeAvatar(changeAvatarData: FormData) {\r\n    profilePageApi.changeAvatar(changeAvatarData);\r\n  }\r\n  \r\n  get state() {\r\n    return this.currentState;\r\n  }\r\n}\r\n","import {Block} from \"../../components/block/block\";\r\nimport {Container} from \"../../components/container/container\";\r\nimport {blockProperty} from \"../../components/block/types\";\r\nimport {\r\n  centerContainerTemplate,\r\n  imageContainerTemplate,\r\n  rightContainerTemplate,\r\n  template\r\n} from \"./template\";\r\nimport {Label} from \"../../components/label/label\";\r\nimport ApplicationStore from \"../ApplicationState/ApplicationStore\";\r\n\r\n\r\nexport class Chat extends Block {\r\n  \r\n  chatLastMessageLabel: Block;\r\n  \r\n  lastMessageTimeLabel: Block;\r\n  \r\n  newMessageCountLabel: Block;\r\n  \r\n  id: number;\r\n  \r\n  isActive: boolean;\r\n  \r\n  title: string;\r\n\r\n  constructor(props: blockProperty) {\r\n    \r\n    const imageContainer: Container = new Container({classes: [\"chat-item__image-container\"]},\r\n      imageContainerTemplate);\r\n  \r\n    const chatNameLabel: Label = new Label({\r\n      textContent: props.title,\r\n      classes: [\"chat-item__name-label\"]\r\n    });\r\n    const isMyLastMessage = ApplicationStore.getState().user!.login === props.last_message?.user.login;\r\n    let lastMessageText = \"<Нет сообщений>\";\r\n    if (props.last_message?.content) {\r\n      lastMessageText = (isMyLastMessage ? \"Вы: \" : \"\") + props.last_message?.content;\r\n    }\r\n    const chatLastMessageLabel: Label = new Label({\r\n      textContent: lastMessageText,\r\n      classes: [\"chat-item__last-message-label\"]\r\n    });\r\n    const centerContainer: Container = new Container({\r\n      classes: [\"chat-item__center-container\"],\r\n      chatNameLabel,\r\n      chatLastMessageLabel\r\n    }, centerContainerTemplate);\r\n  \r\n    const lastMessageTimeLabel: Block = new Label({\r\n      classes: [\"chat-item__last-message-time-label\"]\r\n    });\r\n    if (props.last_message?.time) {\r\n      const lastMEssageDateString: string = new Date(Date.parse(props.last_message?.time)).toLocaleDateString();\r\n      lastMessageTimeLabel.setProps({textContent: lastMEssageDateString});\r\n    } else {\r\n      lastMessageTimeLabel.hide();\r\n    }\r\n    \r\n    const newMessageCountLabel: Block = new Label({\r\n      classes: [\"chat-item__new-message-label\"],\r\n      textContent: props.unread_count\r\n    });\r\n    if (!props.unread_count) {\r\n      newMessageCountLabel.hide();\r\n    }\r\n  \r\n    const rightContainer: Container = new Container({\r\n      classes: [\"chat-item__right-container\"],\r\n      newMessageCountLabel,\r\n      lastMessageTimeLabel\r\n    }, rightContainerTemplate);\r\n    \r\n    super(\"div\", {\r\n      classes: [\"chat-item\"],\r\n      marker: `data-chat-id='${props.id || \"0\"}'`,\r\n      imageContainer,\r\n      centerContainer,\r\n      rightContainer\r\n    }, template);\r\n    \r\n    this.chatLastMessageLabel = chatLastMessageLabel;\r\n    this.lastMessageTimeLabel = lastMessageTimeLabel;\r\n    this.newMessageCountLabel = newMessageCountLabel;\r\n    \r\n    this.id = props.id;\r\n    this.title = props.chatName;\r\n  \r\n    this.eventBus.on(\"newMessage\", this.handleNewMessageEvent);\r\n  }\r\n  \r\n  // eslint-disable-next-line max-params\r\n  handleNewMessageEvent(lastMessage: string, lastMessageTime: string, newMessageCount?: number, isMine?: boolean): void {\r\n    isMine ? this.chatLastMessageLabel.props.isMine.show() : this.chatLastMessageLabel.props.isMine.hide();\r\n    this.chatLastMessageLabel.setProps({textContent: lastMessage});\r\n    this.lastMessageTimeLabel.setProps({textContent: lastMessageTime});\r\n    if (newMessageCount) {\r\n      this.newMessageCountLabel.setProps({textContent: \"\" + newMessageCount});\r\n      this.newMessageCountLabel.show();\r\n    } else {\r\n      this.newMessageCountLabel.hide();\r\n    }\r\n  }\r\n}\r\n","\r\n\r\nexport const imageContainerTemplate = \"<div {{ classes image }}></div>\";\r\n\r\nexport const centerContainerTemplate = \"<div {{ classes chatLastMessageLabel isMine chatNameLabel }}></div>\";\r\n\r\nexport const rightContainerTemplate = \"<div {{ classes newMessageCountLabel lastMessageTimeLabel }}></div>\";\r\n\r\nexport const isMineTemplate = \"<span {{ classes textContent }}></span>\";\r\n\r\nexport const template = \"<div {{ classes rightContainer centerContainer imageContainer marker }}></div>\";\r\n","import {Block} from \"../../components/block/block\";\r\nimport {Container} from \"../../components/container/container\";\r\nimport {linkTemplate} from \"../../components/block/template\";\r\nimport {Input} from \"../../components/Input/input\";\r\nimport {\r\n  chatContainerListTemplate,\r\n  chatContainerTemplate,\r\n  chatMessagesContainerTemplate,\r\n  leftContainerTemplate,\r\n  messageSpanTemplate,\r\n  messageWrapTemplate,\r\n  sendFormTemplate,\r\n  template\r\n} from \"./template\";\r\nimport {Chat} from \"../../modules/chat/chat\";\r\nimport {Form} from \"../../components/form/form\";\r\nimport {Label} from \"../../components/label/label\";\r\n\r\n\r\nimport \"./style.scss\";\r\nimport {ChatEvents} from \"../../controllers/ChatsPageController\";\r\nimport {Router} from \"../../utils/RouteUtils/Router\";\r\nimport ApplicationStore from \"../../modules/ApplicationState/ApplicationStore\";\r\nimport get from \"../../utils/get\";\r\nimport {ReceivedMessage} from \"./types\";\r\n\r\n\r\nconst activeChatClass = \"chat-item__active\";\r\n\r\nexport class ChatsPage extends Block {\r\n  \r\n  chatListContainer: Container;\r\n  \r\n  chatContainer: Container;\r\n  \r\n  chatMessagesContainer: Container;\r\n  \r\n  chatMessages: Block;\r\n  \r\n  sendForm: Form;\r\n  \r\n  search: Input;\r\n  \r\n  deleteChatButton: Container;\r\n  \r\n  addUserButton: Container;\r\n  \r\n  deleteUserButton: Container;\r\n  \r\n  activeChatId: number;\r\n  \r\n  constructor() {\r\n    const profileLink: Block = new Block(\"a\", {\r\n      classes: [\"left-container__profile-link\", \"base-link\"],\r\n      href: \"#\",\r\n      textContent: \"Профиль ❯\",\r\n      listeners: {\r\n        click: (e: Event) => {\r\n          e.preventDefault();\r\n          const router = new Router(\"body\");\r\n          router.go(\"/settings\");\r\n        }\r\n      }\r\n    }, linkTemplate);\r\n    const chatSearchField: Input = new Input({\r\n      classes: [\r\n        \"left-container__search\",\r\n        \"left-container__search_empty\",\r\n        \"base-input\",\r\n        \"base-input-text\"\r\n      ],\r\n      placeholder: \"🔎 Поиск\"\r\n    });\r\n    \r\n    const addChatButton: Container = new Container({\r\n      classes: [\r\n        \"chat-list-action-button\",\r\n        \"add-chat-button\"\r\n      ],\r\n      textContent: \"Добавить чат\"\r\n    });\r\n    const deleteChatButton: Container = new Container({\r\n      classes: [\r\n        \"chat-list-action-button\",\r\n        \"delete-chat-button\"\r\n      ],\r\n      textContent: \"Удалить чат\"\r\n    });\r\n    const addUserButton: Container = new Container({\r\n      classes: [\r\n        \"chat-list-action-button\",\r\n        \"add-chat-button\"\r\n      ],\r\n      textContent: \"Добавить пользователя в чат\"\r\n    });\r\n    const deleteUserButton: Container = new Container({\r\n      classes: [\r\n        \"chat-list-action-button\",\r\n        \"delete-chat-button\"\r\n      ],\r\n      textContent: \"Удалить пользователя из чата\"\r\n    });\r\n    \r\n    const chatListContainer: Container = new Container({\r\n      classes: [\"chat-list-container\"],\r\n      textContent: \"Загрузка чатов...\"\r\n    }, chatContainerListTemplate);\r\n    const leftContainer: Container = new Container({\r\n      classes: [\"left-container\"],\r\n      chatListContainer,\r\n      chatSearchField,\r\n      deleteChatButton,\r\n      addChatButton,\r\n      addUserButton,\r\n      deleteUserButton,\r\n      profileLink\r\n    }, leftContainerTemplate);\r\n    \r\n    const chatContainer: Container = new Container({\r\n      classes: [\"chat-container__empty\"],\r\n      textContent: \"Выберите чат чтобы отправить сообщение\"\r\n    }, chatContainerTemplate);\r\n    \r\n    super(\"div\", {\r\n      classes: [\"page-wrapper\"],\r\n      leftContainer,\r\n      chatContainer,\r\n    }, template);\r\n    \r\n    chatListContainer.setProps({\r\n      listeners: {\r\n        click: this.onChatItemClick.bind(this)\r\n      }\r\n    });\r\n    \r\n    this.chatListContainer = chatListContainer;\r\n    this.chatContainer = chatContainer;\r\n    this.submit();\r\n    chatSearchField.setProps({\r\n      listeners: {\r\n        keyup: this.searchChats.bind(this)\r\n      }\r\n    });\r\n    this.search = chatSearchField;\r\n    addChatButton.setProps({\r\n      listeners: {\r\n        click: () => this.eventBus.emit(ChatEvents.ADD_CHAT)\r\n      }\r\n    });\r\n    deleteChatButton.setProps({\r\n      listeners: {\r\n        click: () => this.eventBus.emit(ChatEvents.DELETE_CHAT, this.activeChatId)\r\n      }\r\n    });\r\n    addUserButton.setProps({\r\n      listeners: {\r\n        click: () => this.eventBus.emit(ChatEvents.ADD_CHAT_USER, this.activeChatId)\r\n      }\r\n    });\r\n    deleteUserButton.setProps({\r\n      listeners: {\r\n        click: () => this.eventBus.emit(ChatEvents.DELETE_CHAT_USER, this.activeChatId)\r\n      }\r\n    });\r\n    deleteChatButton.hide();\r\n    addUserButton.hide();\r\n    deleteUserButton.hide();\r\n    this.deleteChatButton = deleteChatButton;\r\n    this.addUserButton = addUserButton;\r\n    this.deleteUserButton = deleteUserButton;\r\n    this.deleteUserButton = deleteUserButton;\r\n  }\r\n  \r\n  submit() {\r\n    this.eventBus.on(ChatEvents.ON_CHAT_ACTIVATED, this.onChatActivated.bind(this));\r\n    this.eventBus.on(ChatEvents.REFRESH_CHATS, (chats: Chat[]) => this.refreshChatList(chats));\r\n    this.eventBus.on(ChatEvents.ON_CHAT_DESELECTED, () => this.onChatDeselected());\r\n    this.eventBus.on(ChatEvents.RECEIVE_MESSAGE, (messages: ReceivedMessage[]) => {\r\n      const config = messages.map( message  => {\r\n        return {\r\n          isMine: get(ApplicationStore.getState(), \"user.id\") === message.user_id,\r\n          message: message.content\r\n        };\r\n      });\r\n      this.addMessageHandler(config);\r\n    });\r\n  }\r\n  \r\n  refreshChatList(chats: Chat[]): void {\r\n    if (chats.length) {\r\n      const searchValue: string = this.search.props.value;\r\n      if (searchValue) {\r\n        chats = chats.filter(chat => chat.title.includes(searchValue));\r\n      }\r\n      const chatBlocks: Chat[] = chats.map((chat) => {\r\n        return new Chat(chat);\r\n      });\r\n      this.chatListContainer.setProps({chats: chatBlocks, textContent: \"\"});\r\n    } else {\r\n      this.chatListContainer.setProps({textContent: \"Нет чатов\", chats: []});\r\n    }\r\n  }\r\n  \r\n  onChatDeselected() {\r\n    this.chatContainer.element.classList.remove(\"chat-container\");\r\n    this.chatContainer.setProps({\r\n      classes: [\"chat-container__empty\"],\r\n      textContent: \"Выберите чат чтобы отправить сообщение\",\r\n      chatMessagesContainer: null,\r\n      sendForm: null\r\n    });\r\n    this.deleteChatButton.hide();\r\n    this.addUserButton.hide();\r\n    this.deleteUserButton.hide();\r\n  }\r\n  \r\n  searchChats(e: KeyboardEvent) {\r\n    if (e.code === \"Enter\") {\r\n      const searchValue: string = (e.target as HTMLInputElement).value || \"\";\r\n      this.eventBus.emit(\"chatSearchFieldChanged\", searchValue);\r\n    }\r\n  }\r\n  \r\n  onChatItemClick(e: Event): void {\r\n    const target: HTMLElement = (e.target as HTMLElement);\r\n    const targetChat: HTMLElement | null = target.closest<HTMLElement>(\".chat-item\");\r\n    if (targetChat && Number(targetChat.dataset.chatId) !== this.activeChatId) {\r\n      const activeItem: HTMLElement | null = this.element.querySelector(`.${activeChatClass}`);\r\n      if (activeItem) {\r\n        activeItem.classList.remove(activeChatClass);\r\n      }\r\n      targetChat.classList.add(activeChatClass);\r\n      const chatId: string | undefined = targetChat.dataset.chatId;\r\n      this.eventBus.emit(\"chatActivated\", chatId);\r\n    }\r\n  }\r\n  \r\n  onChatActivated(chatId: string = (\"\" + this.activeChatId || \"\")): void {\r\n    if (!this.sendForm) {\r\n      const attachButton: Label = new Label({\r\n        classes: [\r\n          \"send-item\",\r\n          \"send-button\"\r\n        ],\r\n        textContent: \"+\"\r\n      });\r\n      const message: Input = new Input({\r\n        classes: [\r\n          \"send-item\",\r\n          \"send-message\"\r\n        ],\r\n        type: \"text\",\r\n        name: \"message\",\r\n        placeholder: \"Введите сообщение\"\r\n      });\r\n      const sendMessageButton: Input = new Input({\r\n        classes: [\r\n          \"send-item\",\r\n          \"send-button\"\r\n        ],\r\n        type: \"submit\",\r\n        value: \"\\u279c\"\r\n      });\r\n      const sendForm: Form = new Form({\r\n        classes: [\r\n          \"send-message-form\"\r\n        ],\r\n        attachButton,\r\n        message,\r\n        sendMessageButton,\r\n        listeners: {\r\n          submit: this.onSendFormSubmit.bind(this)\r\n        }\r\n      }, sendFormTemplate);\r\n      this.sendForm = sendForm;\r\n      this.chatMessagesContainer = this.getChatMessagesContainer(Number(chatId));\r\n    }\r\n    \r\n    this.activeChatId = Number.parseInt(chatId);\r\n    this.deleteChatButton.show();\r\n    this.addUserButton.show();\r\n    this.deleteUserButton.show();\r\n    this.chatContainer.setProps({\r\n      classes: [\"chat-container\"],\r\n      textContent: \"\",\r\n      sendForm: this.sendForm,\r\n      chatMessagesContainer: this.chatMessagesContainer\r\n    });\r\n  }\r\n  \r\n  getChatMessagesContainer(chatId: Number): Container {\r\n    return new Container({\r\n      chatId,\r\n      classes: [\r\n        \"chat-messages-container\",\r\n      ],\r\n    }, chatMessagesContainerTemplate);\r\n  }\r\n  \r\n  getMessages(): Container[] {\r\n    if (this.chatMessagesContainer.props.chatId === this.activeChatId) {\r\n      return this.chatMessagesContainer.props.messages || [];\r\n    } else {\r\n      return [];\r\n    }\r\n    \r\n  }\r\n  \r\n  getChatItem(config: { isMine: boolean, message: string }): Container {\r\n    const cls: string[] = [\r\n      \"chat-message-item-span\"\r\n    ];\r\n    if (config.isMine) {\r\n      cls.push(\"my-message\");\r\n    }\r\n    return new Container({\r\n      classes: [\r\n        \"chat-message-item\"\r\n      ],\r\n      messageSpan: new Container({textContent: config.message, classes: cls}, messageSpanTemplate),\r\n    }, messageWrapTemplate);\r\n  }\r\n  \r\n  onSendFormSubmit(e: Event): void {\r\n    e.preventDefault();\r\n    const text: string = (e.target as HTMLFormElement).message.value;\r\n    if (text) {\r\n      (e.target as HTMLFormElement).message.value = \"\";\r\n      this.eventBus.emit(ChatEvents.SEND_MESSAGE, this.activeChatId, text);\r\n    }\r\n  }\r\n  \r\n  addMessageHandler(messages: { isMine: boolean, message: string }[]) {\r\n    const currentMessages: Container[] = this.getMessages();\r\n    for (let i = messages.length - 1; i >= 0; i--) {\r\n      currentMessages.push(this.getChatItem(messages[i]));\r\n    }\r\n    this.chatMessagesContainer = this.getChatMessagesContainer(this.activeChatId);\r\n    this.chatMessagesContainer.setProps({messages: currentMessages});\r\n    this.chatContainer.setProps({chatMessagesContainer: this.chatMessagesContainer});\r\n  }\r\n  \r\n}\r\n","export const leftContainerTemplate = \"<div {{ classes chatListContainer chatSearchField deleteUserButton addUserButton \" +\r\n  \"deleteChatButton addChatButton profileLink }}></div>\";\r\n\r\nexport const chatContainerListTemplate = \"<div {{ classes textContent chats }}></div>\";\r\n\r\nexport const chatContainerTemplate = \"<div {{ classes textContent sendForm chatMessagesContainer }}></div>\";\r\n\r\nexport const chatMessagesContainerTemplate = \"<div {{ classes messages }}></div>\";\r\n\r\nexport const sendFormTemplate = \"<form {{ classes sendMessageButton message attachButton }}></form>\";\r\n\r\nexport const messageWrapTemplate = \"<div {{ classes messageSpan }}></div>\";\r\n\r\nexport const messageSpanTemplate = \"<span {{ classes textContent }}></span>\";\r\n\r\nexport const addChatTemplate = \"<div {{ classes button input }}></div>\";\r\n\r\nexport const deleteChatTemplate = \"<div {{ classes button label }}></div>\";\r\n\r\nexport const template = \"<div {{ classes chatContainer leftContainer }}></div>\";\r\n","import {BaseAPI} from \"./BaseApi\";\r\nimport {HTTPTransport} from \"../XHR\";\r\nimport ApplicationStore from \"../../modules/ApplicationState/ApplicationStore\";\r\nimport {usersRequest} from \"./types\";\r\n\r\nconst HTTP = new HTTPTransport(\"https://ya-praktikum.tech/api/v2/\");\r\n\r\nexport class ChatPageApi extends BaseAPI {\r\n  public getChats() {\r\n    return HTTP.get(\"chats\",\r\n      {\r\n        credentials: \"include\",\r\n        mode: \"cors\",\r\n        headers: {\r\n          \"content-type\": \"application/json\",\r\n        }\r\n      })\r\n      .then((result: XMLHttpRequest) => {\r\n        ApplicationStore.set(\"chats\", JSON.parse(result.responseText));\r\n      });\r\n  }\r\n  \r\n  public createChat(title: string) {\r\n    return HTTP.post(\"chats\",\r\n      {\r\n        credentials: \"include\",\r\n        mode: \"cors\",\r\n        headers: {\r\n          \"content-type\": \"application/json\",\r\n        },\r\n        data: {title}\r\n      })\r\n      .then( ()=> {\r\n        this.getChats();\r\n      });\r\n  }\r\n  \r\n  public deleteChat(chatId: number) {\r\n    HTTP.delete(\"chats\",\r\n      {\r\n        credentials: \"include\",\r\n        mode: \"cors\",\r\n        headers: {\r\n          \"content-type\": \"application/json\",\r\n        },\r\n        data: {chatId}\r\n      })\r\n      .then( ()=> {\r\n        this.getChats();\r\n      });\r\n  }\r\n  \r\n  public addChatUsers(data: usersRequest) {\r\n    HTTP.put(\"chats/users\",\r\n      {\r\n        credentials: \"include\",\r\n        mode: \"cors\",\r\n        headers: {\r\n          \"content-type\": \"application/json\",\r\n        },\r\n        data: {...data}\r\n      })\r\n      .then( ()=> {\r\n        this.getChats();\r\n      });\r\n  }\r\n  \r\n  public deleteChatUsers(data: usersRequest) {\r\n    HTTP.delete(\"chats/users\",\r\n      {\r\n        credentials: \"include\",\r\n        mode: \"cors\",\r\n        headers: {\r\n          \"content-type\": \"application/json\",\r\n        },\r\n        data: {...data}\r\n      })\r\n      .then( ()=> {\r\n        this.getChats();\r\n      });\r\n  }\r\n  \r\n  public getChatToken(chatId: number) {\r\n    HTTP.post(\"chats/token/\" + chatId,\r\n      {\r\n        credentials: \"include\",\r\n        mode: \"cors\",\r\n        headers: {\r\n          \"content-type\": \"application/json\",\r\n        }\r\n      })\r\n      .then( (result: XMLHttpRequest)=> {\r\n        ApplicationStore.set(`tokens.${chatId}`, JSON.parse(result.responseText));\r\n      });\r\n  }\r\n  \r\n  public getNewMessagesCount(chatId: number) {\r\n    HTTP.get(\"chats/new/\" + chatId,\r\n      {\r\n        credentials: \"include\",\r\n        mode: \"cors\",\r\n        headers: {\r\n          \"content-type\": \"application/json\",\r\n        }\r\n      })\r\n      .then( (result: XMLHttpRequest)=> {\r\n        ApplicationStore.set(\"activeChatNewMessagesCount\", JSON.parse(result.responseText));\r\n      });\r\n  }\r\n}","import {BaseController} from \"./BaseController\";\r\nimport {Chat} from \"../modules/chat/chat\";\r\nimport {ChatsPage} from \"../pages/Chats\";\r\nimport {ChatPageApi} from \"../utils/API/ChatPageApi\";\r\nimport ApplicationStore, {StoreEvents} from \"../modules/ApplicationState/ApplicationStore\";\r\nimport {Input} from \"../components/Input/input\";\r\nimport {Container} from \"../components/container/container\";\r\nimport {Popup} from \"../modules/popup/popup\";\r\nimport {Label} from \"../components/label/label\";\r\nimport {addChatTemplate, deleteChatTemplate} from \"../pages/Chats/template\";\r\nimport get from \"../utils/get\";\r\nimport {ReceivedMessage} from \"../pages/Chats/types\";\r\n\r\nconst chatPageApi = new ChatPageApi();\r\n\r\nexport enum ChatEvents {\r\n  GET_CHATS = \"getChats\",\r\n  REFRESH_CHATS = \"refreshChatList\",\r\n  ADD_CHAT = \"addChatClick\",\r\n  DELETE_CHAT = \"deleteChatClick\",\r\n  ON_CHAT_DESELECTED = \"onChatChatDeselected\",\r\n  ON_CHAT_ACTIVATED = \"chatActivated\",\r\n  ADD_CHAT_USER = \"addChatUser\",\r\n  DELETE_CHAT_USER = \"deleteChatUser\",\r\n  SEND_MESSAGE = \"sendMessage\",\r\n  RECEIVE_MESSAGE = \"receiveMessage\"\r\n}\r\n\r\nexport class ChatsPageController extends BaseController {\r\n  \r\n  private sockets: Record<string, any> = {};\r\n  \r\n  constructor() {\r\n    super(new ChatsPage());\r\n    this.subscribe();\r\n    this.publish();\r\n  }\r\n  \r\n  subscribe() {\r\n    ApplicationStore.on(StoreEvents.Updated, (path: string, value: any) => this.onApplicationStoreUpdate(path, value));\r\n    this.view.eventBus.on(ChatEvents.GET_CHATS, () => this.getChats());\r\n    this.view.eventBus.on(ChatEvents.ON_CHAT_ACTIVATED, (chatId: number) => this.onChatActivated(chatId));\r\n    this.view.eventBus.on(ChatEvents.ADD_CHAT, () => this.onAddChatClick());\r\n    this.view.eventBus.on(ChatEvents.DELETE_CHAT, (chatId: number) => this.onDeleteChatClick(chatId));\r\n    this.view.eventBus.on(ChatEvents.ADD_CHAT_USER, (chatId: number) => this.showUserActionPopup(chatId, false));\r\n    this.view.eventBus.on(ChatEvents.DELETE_CHAT_USER, (chatId: number) => this.showUserActionPopup(chatId, true));\r\n    this.view.eventBus.on(ChatEvents.SEND_MESSAGE, (chanId: number, message: string) => this.sendMessage(chanId, message));\r\n  }\r\n  \r\n  publish() {\r\n    this.view.eventBus.emit(ChatEvents.GET_CHATS);\r\n  }\r\n  \r\n  getChats(): void {\r\n    chatPageApi.getChats();\r\n  }\r\n  \r\n  sendMessage(chatId: number, message: string) {\r\n    const socket: WebSocket = this.sockets[chatId];\r\n    if (socket) {\r\n      socket.send(JSON.stringify({\r\n        content: message,\r\n        type: \"message\"}));\r\n    }\r\n  }\r\n  \r\n  onApplicationStoreUpdate(path: string, value: any): void {\r\n    if (path === \"chats\") {\r\n      this.onChatsUpdated(value);\r\n    }\r\n    if (/tokens.*/.test(path)) {\r\n      this.onTokensChanged(value);\r\n    }\r\n    if (path === \"activeChatNewMessagesCount\") {\r\n      this.onNewMessagesCountCHanged();\r\n    }\r\n  }\r\n  \r\n  onNewMessagesCountCHanged() {\r\n    const activeChatId = (this.view as ChatsPage).activeChatId;\r\n    this.sockets[activeChatId].send(JSON.stringify(  {\r\n      content: \"0\",\r\n      type: \"get old\"\r\n    }));\r\n  }\r\n  \r\n  onChatsUpdated(chats: Chat[]) {\r\n    this.view.eventBus.emit(ChatEvents.REFRESH_CHATS, chats);\r\n  }\r\n  \r\n  onTokensChanged(value: any) {\r\n    const token = value.token;\r\n    if (!token) {\r\n      return;\r\n    }\r\n    const activeChatId: number = (this.view as ChatsPage).activeChatId;\r\n    if (!this.sockets[activeChatId]) {\r\n      this.createSocket(activeChatId, token);\r\n    } else {\r\n      chatPageApi.getNewMessagesCount(activeChatId);\r\n    }\r\n  }\r\n  \r\n  createSocket(chatId: number, token: string) {\r\n    if (!chatId) {\r\n      return;\r\n    }\r\n    const userId = get(ApplicationStore.getState(), \"user.id\");\r\n    if (!userId) {\r\n      return;\r\n    }\r\n    const socketTemplate: string = `wss://ya-praktikum.tech/ws/chats/${userId}/${chatId}/${token}`;\r\n    const socket: WebSocket = this.sockets[chatId] = new WebSocket(socketTemplate);\r\n    this.applySocketListeners(socket, chatId);\r\n  }\r\n  \r\n  applySocketListeners(socket: WebSocket, chatId: number) {\r\n    socket.addEventListener(\"open\", () => {\r\n      chatPageApi.getNewMessagesCount(chatId);\r\n      console.log(\"Соединение установлено \" + chatId);\r\n    });\r\n    socket.addEventListener(\"close\", event => {\r\n      if (event.wasClean) {\r\n        console.log(\"Соединение закрыто чисто\");\r\n      } else {\r\n        console.log(\"Обрыв соединения\");\r\n      }\r\n      console.log(chatId + ` Код: ${event.code} | Причина: ${event.reason}`);\r\n      delete this.sockets[chatId];\r\n    });\r\n    socket.addEventListener(\"message\", event => {\r\n      const message: any = JSON.parse((event as any).data);\r\n      if (Array.isArray(message)) {\r\n        this.view.eventBus.emit(ChatEvents.RECEIVE_MESSAGE, message);\r\n      }\r\n      if (message.type === \"message\") {\r\n        this.view.eventBus.emit(ChatEvents.RECEIVE_MESSAGE, [message]);\r\n      }\r\n    });\r\n  \r\n    socket.addEventListener(\"error\", event => {\r\n      console.log(\"Ошибка\", (event as any).message);\r\n    });\r\n    \r\n    setInterval(() => {\r\n      socket.send(JSON.stringify({type: \"ping\"}));\r\n    },  1 * 60 * 1000);\r\n  }\r\n  \r\n  onReceiveMessage(message: ReceivedMessage) {\r\n    this.view.eventBus.emit(ChatEvents.RECEIVE_MESSAGE, message);\r\n  }\r\n  \r\n  onAddChatClick() {\r\n    const input: Input = new Input({\r\n      classes: [\r\n        \"base-input\",\r\n        \"base-input-text\",\r\n        \"sign-text-input\"\r\n      ],\r\n      placeholder: \"Название чата\"\r\n    });\r\n    const button = new Input({\r\n      value: \"Создать\",\r\n      classes: [\r\n        \"popup-btn\",\r\n        \"base-input-button\",\r\n        \"sign-btn\"\r\n      ],\r\n      listeners: {\r\n        click: (e: Event) => {\r\n          e.cancelBubble = true;\r\n          e.preventDefault();\r\n          const inputValue = (input.element as HTMLInputElement).value;\r\n          if (inputValue) {\r\n            chatPageApi.createChat(inputValue);\r\n            this.view.eventBus.emit(ChatEvents.ON_CHAT_DESELECTED);\r\n          }\r\n          popup.hide();\r\n        }\r\n      }\r\n    });\r\n    const popupContainer: Container = new Container({\r\n      classes: [\r\n        \"main-block\",\r\n        \"change-avatar-popup\"\r\n      ],\r\n      listeners: {\r\n        click: (e: Event) => {\r\n          e.cancelBubble = true;\r\n        }\r\n      },\r\n      input,\r\n      button\r\n    }, addChatTemplate);\r\n    const popup = new Popup({popupContainer: popupContainer});\r\n    popup.show();\r\n  }\r\n  \r\n  onDeleteChatClick(chatId: number) {\r\n    const label: Label = new Label({\r\n      textContent: \"Вы уверены что хотите удалить чат?\"\r\n    });\r\n    const button = new Input({\r\n      value: \"Удалить\",\r\n      classes: [\r\n        \"popup-btn\",\r\n        \"base-input-button\",\r\n        \"sign-btn\"\r\n      ],\r\n      listeners: {\r\n        click: (e: Event) => {\r\n          e.cancelBubble = true;\r\n          e.preventDefault();\r\n          popup.hide();\r\n          chatPageApi.deleteChat(chatId);\r\n          this.view.eventBus.emit(ChatEvents.ON_CHAT_DESELECTED);\r\n        }\r\n      }\r\n    });\r\n    const popupContainer: Container = new Container({\r\n      classes: [\r\n        \"main-block\",\r\n        \"change-avatar-popup\"\r\n      ],\r\n      listeners: {\r\n        click: (e: Event) => {\r\n          e.cancelBubble = true;\r\n        }\r\n      },\r\n      label,\r\n      button\r\n    }, deleteChatTemplate);\r\n    const popup = new Popup({popupContainer: popupContainer});\r\n    popup.show();\r\n  }\r\n  \r\n  showUserActionPopup(chatId: number, isDelete: boolean) {\r\n    const input: Input = new Input({\r\n      classes: [\r\n        \"base-input\",\r\n        \"base-input-text\",\r\n        \"sign-text-input\"\r\n      ],\r\n      placeholder: \"Id пользователей\"\r\n    });\r\n    const button = new Input({\r\n      value: isDelete ? \"Удалить\" : \"Добавить\",\r\n      classes: [\r\n        \"popup-btn\",\r\n        \"base-input-button\",\r\n        \"sign-btn\"\r\n      ],\r\n      listeners: {\r\n        click: (e: Event) => {\r\n          e.cancelBubble = true;\r\n          e.preventDefault();\r\n          const inputValue = (input.element as HTMLInputElement).value;\r\n          if (inputValue) {\r\n            const data = {\r\n              users: inputValue.split(\",\").map(item => Number.parseInt(item)),\r\n              chatId: chatId\r\n            };\r\n            if (!isDelete) {\r\n              chatPageApi.addChatUsers(data);\r\n            } else {\r\n              chatPageApi.deleteChatUsers(data);\r\n            }\r\n          }\r\n          popup.hide();\r\n        }\r\n      }\r\n    });\r\n    const popupContainer: Container = new Container({\r\n      classes: [\r\n        \"main-block\",\r\n        \"change-avatar-popup\"\r\n      ],\r\n      listeners: {\r\n        click: (e: Event) => {\r\n          e.cancelBubble = true;\r\n        }\r\n      },\r\n      input,\r\n      button\r\n    }, addChatTemplate);\r\n    const popup = new Popup({popupContainer: popupContainer});\r\n    popup.show();\r\n  }\r\n  \r\n  onChatActivated(chatId: number) {\r\n    const state = ApplicationStore.getState();\r\n    const token = get(state, `tokens.${chatId}.token`);\r\n    if (!token) {\r\n      chatPageApi.getChatToken(chatId);\r\n    } else {\r\n      chatPageApi.getNewMessagesCount(chatId);\r\n    }\r\n  }\r\n  \r\n}\r\n","import {Form, getDefaultTextInputClasses} from \"../../components/form/form\";\r\nimport {ContaineredInput} from \"../../components/containeredInput/containeredInput\";\r\nimport {actionsContainerTemplate, template} from \"./template\";\r\nimport {Container} from \"../../components/container/container\";\r\nimport {blockProperty} from \"../../components/block/types\";\r\nimport {ValidatorFactory} from \"../../utils/Validators/ValidatorFactory\";\r\n\r\nexport class SignUpForm extends Form {\r\n  \r\n  constructor(props: blockProperty) {\r\n  \r\n    const confirmPass = getSignUpFormField(\"password_confirmation\", \"password\", \"Подтвердите пароль\");\r\n    const pass = getSignUpFormField(\"password\", \"password\", \"Пароль\");\r\n    const phone = getSignUpFormField(\"phone\", \"text\", \"Телефон\");\r\n    const secName = getSignUpFormField(\"second_name\", \"text\", \"Фамилия\");\r\n    const firstName = getSignUpFormField(\"first_name\", \"text\", \"Имя\");\r\n    const login = getSignUpFormField(\"login\", \"text\", \"Логин\");\r\n    const email = getSignUpFormField(\"email\", \"text\", \"Email\");\r\n    const actionContainer = new Container(\r\n      {classes: [\"sign-in-form__action-container\", \"sign-action-container\"], link: props.link, btn: props.btn },\r\n      actionsContainerTemplate);\r\n  \r\n    super({classes: [\"base-form\", \"sign-form\", \"login-form\"], actionContainer, email,login, firstName, secName, phone,\r\n      pass, confirmPass, listeners: props.listeners}, template);\r\n  }\r\n}\r\n\r\nfunction getSignUpFormField(name: string, type: string, placeholder: string): ContaineredInput {\r\n  let instanse: ContaineredInput;\r\n  const props: blockProperty = {\r\n    name: name,\r\n    type: type,\r\n    placeholder: placeholder,\r\n    classes: getDefaultTextInputClasses(),\r\n    containerClasses: getDefaultInputContainerClasses(),\r\n    labelClasses: [\r\n      \"base-label\"\r\n    ],\r\n    validator: ValidatorFactory.getValidator(name)\r\n  };\r\n  instanse = new ContaineredInput(props);\r\n  return instanse;\r\n}\r\n\r\nfunction getDefaultInputContainerClasses(): string[] {\r\n  return [\"sign-input-container\"];\r\n}\r\n","export const template = `<form {{ classes actionContainer confirmPass pass phone secName firstName login email }} >\r\n  </form>`;\r\n\r\nexport const actionsContainerTemplate: string  = \"<div {{ classes link btn }}></div>\";\r\n","import {Block} from \"../../components/block/block\";\r\nimport {authLinkTemplate, loginErrorContainerTemplate, template} from \"../login/template\";\r\nimport {Label} from \"../../components/label/label\";\r\nimport {Container} from \"../../components/container/container\";\r\nimport {SignUpForm} from \"../../modules/signUpForm/signUpForm\";\r\nimport {Input} from \"../../components/Input/input\";\r\nimport {Router} from \"../../utils/RouteUtils/Router\";\r\nimport {Form} from \"../../components/form/form\";\r\nimport {SignUpRequest} from \"../../utils/API/types\";\r\nimport {Popup} from \"../../modules/popup/popup\";\r\n\r\nexport default class SignUpPage extends Block {\r\n  \r\n  form: Form;\r\n  \r\n  constructor() {\r\n    const label = new Label({classes: [\"form-header\"], textContent: \"Регистрация\"});\r\n    const link = new Block(\"a\", {\r\n      classes: [\r\n        \"base-link\",\r\n        \"sign-link\"\r\n      ],\r\n      href: \"/\",\r\n      textContent: \"Войти\"\r\n    }, authLinkTemplate);\r\n    \r\n    const btn = new Input({\r\n      type: \"submit\",\r\n      value: \"Авторизоваться\",\r\n      listeners: {\r\n        click: function () {\r\n        }\r\n      },\r\n      classes: [\r\n        \"base-input\",\r\n        \"base-input-button\",\r\n        \"sign-btn\",\r\n        \"action-container__sign-up-btn\"\r\n      ]\r\n    });\r\n    const form = new SignUpForm({link, btn});\r\n    const mainBlock: Container = new Container({classes: [\"sign-in-block\", \"main-block\"], label, form});\r\n    \r\n    super(\"div\", {mainBlock}, template);\r\n  \r\n    link.setProps({listeners: this.getLinkListener()});\r\n    form.setProps({listeners: {submit: this.onSignUpSubmit.bind(this)}});\r\n    this.form = form;\r\n    this.eventBus.on(\"signUpError\", (errorText: string) => this.onSignUpError(errorText));\r\n  }\r\n  \r\n  getLinkListener(): Record<string, (e: Event) => void> {\r\n    return {\r\n      click: (e: Event) => {\r\n        e.preventDefault();\r\n        const router = new Router(\"body\");\r\n        router.go(\"/\");\r\n      }\r\n    };\r\n  }\r\n  \r\n  onSignUpSubmit(e: Event) {\r\n    e.preventDefault();\r\n    const form: HTMLFormElement = e.target as HTMLFormElement;\r\n    const data: SignUpRequest = {\r\n      email: form.email.value,\r\n      login: form.login.value,\r\n      first_name: form.first_name.value,\r\n      second_name: form.second_name.value,\r\n      phone: form.phone.value,\r\n      password: form.password.value,\r\n    };\r\n    const isNotValid = this.form.validate();\r\n    if (!isNotValid) {\r\n      this.eventBus.emit(\"formSubmit\", data);\r\n    }\r\n  }\r\n  \r\n  onSignUpError(errorText: string) {\r\n    const signUpErrorLabel: Label = new Label({\r\n      textContent: errorText\r\n    });\r\n    const signUpErrorBtn = new Input({\r\n      value: \"OK\",\r\n      classes: [\r\n        \"popup-btn\",\r\n        \"base-input-button\",\r\n        \"sign-btn\"\r\n      ],\r\n      listeners: {\r\n        click: () => {\r\n          loginErrorMessage.hide();\r\n        }\r\n      }\r\n    });\r\n    const signUpErrorPopup: Container = new Container({\r\n      classes: [\r\n        \"main-block\",\r\n        \"change-avatar-popup\"\r\n      ],\r\n      listeners: {\r\n        click: (e: Event) => {\r\n          e.cancelBubble = true;\r\n        }\r\n      },\r\n      signUpErrorLabel,\r\n      signUpErrorBtn\r\n    }, loginErrorContainerTemplate);\r\n    const loginErrorMessage = new Popup({popupContainer: signUpErrorPopup});\r\n    loginErrorMessage.show();\r\n  }\r\n}\r\n","import {BaseAPI} from \"./BaseApi\";\r\nimport {HTTPTransport} from \"../XHR\";\r\nimport {SignUpRequest} from \"./types\";\r\nimport {UserApi} from \"./UserApi\";\r\n\r\nconst HTTP = new HTTPTransport(\"https://ya-praktikum.tech/api/v2/\");\r\n\r\nexport class SignUpPageApi extends BaseAPI {\r\n  public register(user: SignUpRequest) {\r\n    return HTTP.post(\"auth/signup\",\r\n      {\r\n        credentials: \"include\",\r\n        mode: \"cors\",\r\n        headers: {\r\n          \"content-type\": \"application/json\",\r\n        },\r\n        data: user,\r\n      })\r\n      .then((result: XMLHttpRequest) => {\r\n        if (result.status === 200) {\r\n          UserApi.getUser();\r\n        }\r\n      });\r\n  }\r\n}","import {BaseController} from \"./BaseController\";\r\nimport SignUpPage from \"../pages/signUp/signUp\";\r\nimport {SignUpPageApi} from \"../utils/API/SignUpPageApi\";\r\nimport {SignUpRequest} from \"../utils/API/types\";\r\nimport ApplicationStore, {StoreEvents} from \"../modules/ApplicationState/ApplicationStore\";\r\nimport {Router} from \"../utils/RouteUtils/Router\";\r\nconst signUpPageApi = new SignUpPageApi();\r\n\r\nexport default class SignUpPageController extends BaseController{\r\n  \r\n  constructor() {\r\n    super(new SignUpPage());\r\n    this.view.eventBus.on(\"formSubmit\", (data: SignUpRequest) => this.onFormSubmit(data));\r\n    ApplicationStore.on(StoreEvents.Updated, (path: string, value: any) => this.onApplicationStoreUpdate(path, value));\r\n  }\r\n  \r\n  onFormSubmit(data: SignUpRequest): void {\r\n    try {\r\n      signUpPageApi.register(data);\r\n    } catch (e) {\r\n      this.view.eventBus.emit(\"singUpError\");\r\n    }\r\n  }\r\n  \r\n  onApplicationStoreUpdate(path: string, value: any) {\r\n    if (path === \"user\" && value && value.id) {\r\n      this.onChangeUser();\r\n    }\r\n    if (path === \"signUpError\") {\r\n      this.view.eventBus.emit(\"signUpError\", value);\r\n    }\r\n  }\r\n  \r\n  onChangeUser() {\r\n    const router = new Router(\"body\");\r\n    router.go(\"/messenger\");\r\n  }\r\n}\r\n","import {Block} from \"../../components/block/block\";\r\nimport {blockProperty} from \"../../components/block/types\";\r\nimport {Container} from \"../../components/container/container\";\r\nimport {mainContainerTemplate, template} from \"./template\";\r\nimport {linkTemplate} from \"../../components/block/template\";\r\n\r\nimport \"./style.scss\";\r\n\r\n\r\nclass ErrorPage extends Block {\r\n  \r\n  constructor(props: blockProperty) {\r\n    const errorNumber = new Container({classes: \"error-number\", textContent: props.errorNumber});\r\n    const errorText = new Container({classes: \"error-text\", textContent: props.errorText});\r\n    const link = new Block(\"a\", {\r\n      classes: [\"base-link\", \"sign-link\", \"error-link\"], href: \"/\",\r\n      textContent: \"Назад к чатам\"\r\n    }, linkTemplate);\r\n    const mainContainer = new Container({classes: [\"main-container\"], link, errorText, errorNumber}, mainContainerTemplate);\r\n    super(\"div\", {mainContainer}, template);\r\n  }\r\n}\r\n\r\nexport class NotFoundPage extends ErrorPage {\r\n  constructor() {\r\n    super({errorNumber: \"404\", errorText: \"Не туда попали\"});\r\n  }\r\n}\r\n\r\nexport class ServerErrorPage extends ErrorPage {\r\n  constructor() {\r\n    super({errorNumber: \"500\", errorText: \"Мы уже фиксим\"});\r\n  }\r\n}\r\n","export const mainContainerTemplate: string  = \"<div {{ classes link errorText errorNumber }}></div>\";\r\n\r\nexport const template = \"<div {{ mainContainer }}></div>\";\r\n","import {BaseController} from \"./BaseController\";\r\nimport {NotFoundPage} from \"../pages/error/errorPage\";\r\n\r\nexport default class NotFoundController extends BaseController {\r\n  constructor() {\r\n    super(new NotFoundPage());\r\n  }\r\n}","import {Router} from \"../src/utils/RouteUtils/Router\";\r\nimport LoginPageController from \"../src/controllers/LoginPageController\";\r\nimport {ProfilePageController} from \"../src/controllers/ProfilePageController\";\r\nimport {ChatsPageController} from \"../src/controllers/ChatsPageController\";\r\nimport SignUpPageController from \"../src/controllers/SignUpPageController\";\r\nimport {UserApi} from \"../src/utils/API/UserApi\";\r\nimport applicationStore, {StoreEvents} from \"../src/modules/ApplicationState/ApplicationStore\";\r\nimport NotFoundController from \"../src/controllers/404ErrorController\";\r\n\r\n\r\n\r\nUserApi.getUser()\r\n  .then(() => onCheckUser());\r\n\r\napplicationStore.on(StoreEvents.Updated, () => console.dir(applicationStore.getState()));\r\n\r\nfunction onCheckUser() {\r\n  const router = new Router(\"body\");\r\n  router.use(\"/\", LoginPageController)\r\n    .use(\"/sign-up\", SignUpPageController)\r\n    .use(\"/settings\", ProfilePageController)\r\n    .use(\"/messenger\", ChatsPageController)\r\n    .use(\"/404\", NotFoundController)\r\n    .start();\r\n  applicationStore.on(StoreEvents.Updated, (path: string, value: any) => {\r\n    if (path === \"user\" && !value?.id) {\r\n      router.go(\"/\");\r\n    }\r\n  });\r\n}\r\n\r\n\r\n\r\n"],"names":["$98b7e756e6c3bb9b$export$e7b0ac011bb776c6","pathname","view","props","this","_pathname","_controllerClass","_controller","_props","navigate","match","render","leave","hideView","lhs","rhs","query","block","root","document","querySelector","innerHTML","appendChild","getContent","$46ef1d3c333dc1b3$export$b3890eb0ae9dca99","rootQuery","obj","path","defaultValue","keys","split","result","key","undefined","$bb6297e2ebc7fc84$var$checkObject","value","Array","isArray","$bb6297e2ebc7fc84$export$2e2bcd8739ae039","$bb6297e2ebc7fc84$var$merge","Object","reduce","left","right","$3d7b9e5a4f7dfbe6$export$2e2bcd8739ae039","object","part","Error","$3d7b9e5a4f7dfbe6$var$checkPath","newObj","start","indexOf","arr","reduceRight","item","index","length","$b62cb996ae74989b$export$2e2bcd8739ae039","$b68865c79ac24d56$export$2e2bcd8739ae039","listeners","on","event","callback","push","off","filter","listener","emit","args","forEach","$0b6c74ad8c8086e4$export$84bc128a772952e2","$0b6c74ad8c8086e4$export$2e2bcd8739ae039","set","state","Updated","getState","$b8c7674375ef8795$export$55185c17a0fcbe46","__instance","routes","history","window","_currentRoute","_rootQuery","use","route","addEventListener","e","_onRoute","currentTarget","location","user","$99de0b4711b092ff$export$2e2bcd8739ae039","go","getRoute","pushState","back","forward","find","$87e31c8b74a06fc2$export$3b5bd9381a52554c","eventBus","hide","showView","show","$e3eb7ed9a4d10b31$var$TEMPLATE_REGEXP","$e3eb7ed9a4d10b31$var$printableProps","id","classes","style","placeholder","type","href","name","alt","src","$e3eb7ed9a4d10b31$export$bda0decfc3e51f17","template","_template","items","textContent","_compileTemplate","ctx","tmpl","exec","tmpls","trim","tmplValue","pop","data","_isBlock","_isBlockArray","replacedText","_isStringArray","join","newData","replace","_getElement","fragment","createElement","content","children","$c77bb9f0395e3fa7$export$d96a8827a60d6b69","every","el","compile","tagName","setProps","nextProps","assign","_meta","_makePropsProxy","_registerEvents","EVENTS","INIT","init","bind","FLOW_CDM","_componentDidMount","FLOW_CDU","_componentDidUpdate","FLOW_RENDER","_render","_createResources","componentDidMount","_element","_createDocumentElement","oldValue","newValue","componentDidUpdate","element","newElement","removeListeners","tempEl","replaceWith","addListeners","self","Proxy","target","property","receiver","Reflect","get","deleteProperty","entries","eventName","handler","once","removeEventListener","insertClasses","removeClasses","cls","size","remove","delete","insert","add","from","display","$ae3b504279855f01$export$b04be29aa201d4f5","super","$6330f26843a31bcf$export$42a852a2b6b56249","$df5e97bac4bd509d$export$f5b8910cec6cf069","validate","validator","field","checkValid","$b0fa7fb68523a6c5$export$f2474fadb3fd557e","fieldNameLabel","labelClasses","alwaysShowlabel","inputField","validationLabel","warningLabelClasses","containerClasses","neverShowlabel","newListeners","focus","focused","checkHideLabel","blur","input","warningMessage","$18cbd3c7cd8f3f58$export$a7fed597f4b8afd8","forValidate","values","isNotValid","i","$3b0fd1a4a38fb5dc$export$fd720959e864efad","validFncs","text","fn","current","$a9e8972866964d0b$export$dba324c4e07d770c","toLocaleUpperCase","test","$e85b52a813c87492$export$b1a22a90f851bf53","$b8dd75900db61e7a$export$b8ff93c9aaf596e","$3c225a29216c3156$export$2247fa39fa707850","$30a5d059cf19c848$export$edcb1f412665a7f2","$748a1b1659d47b54$export$5bd5d18e991c95fb","toLowerCase","includes","$332493de530f97ff$export$1f58f750f20f344b","nameInput","getValidator","passInput","link","btn","$176bab225cc5c887$export$129a32eedafa97c5","popupContainer","body","overflow","click","container","$46ef1d3c333dc1b3$export$d32f462ed326200c","$0bd492caf819f5ee$export$2e2bcd8739ae039","label","form","submit","onLoginSubmit","getLinkListener","errorText","onLoginError","preventDefault","login","password","loginErrorLabel","loginErrorBtn","loginErrorMessage","loginErrorPopup","cancelBubble","$fca771835c8c5f61$export$70edad7ad5bb3f5d","create","request","update","$71b91abe2e019782$var$isPlainObject","constructor","prototype","toString","call","$71b91abe2e019782$var$isArrayOrObject","$71b91abe2e019782$var$isArray","$71b91abe2e019782$var$getKey","parentKey","$71b91abe2e019782$var$getParams","encodeURIComponent","String","$71b91abe2e019782$export$ded69dcd8ce7e468","map","METHODS","$d4f710385d1ce5ae$var$METHODS","$d4f710385d1ce5ae$export$5767f363d4830f89","baseUrl","url","options","method","GET","timeout","put","PUT","post","POST","DELETE","Promise","resolve","reject","headers","xhr","XMLHttpRequest","open","setRequestHeader","credentials","withCredentials","onload","handleError","onabort","onerror","ontimeout","send","JSON","stringify","setTimeout","$6c994ffafbb74331$var$HTTP","$6c994ffafbb74331$export$2a63ac7615f78125","mode","then","status","parse","responseText","$9a905f5130223570$var$HTTP","$c5375a3f3fb37036$var$loginPageApi","getUser","$c5375a3f3fb37036$export$2e2bcd8739ae039","currentState","onFormSubmit","onApplicationStoreUpdate","onChangeUser","$22bee7c9eea885a4$export$120c0e7b1bef3ec7","backButton","backBtnContainer","changeAvatarTitle","changeAvatarLink","changeAvatarButton","changeAvaparPopupContainer","FormData","$1a3bf1d35d6c383a$export$ec03dbdfd8f47cdc","CHANGE_AVATAR","img","avatarSrc","newAvatar","avatarWrapper","displayName","nameLabel","profileFormItems","$22bee7c9eea885a4$var$getProfileForm","contentWrapper","profileForm","actionsContainer1","getActionContainer","getPreviewActionContainerItems","elements","res","CHANGE_DATA","actionsContainer","setInputsDisable","avatarImg","onChangeUserData","display_name","avatar","actions","getProfileActionButton","onChangeDataClick","onChangePassButtonClick","LOGOUT","getChangeDataActionsContainer","getChangePassActionsContainer","CHANGE_STATE","$1a3bf1d35d6c383a$export$e04f4e34d55b9e5","ChangeInfo","ChangePass","changePassForm","oldPass","$22bee7c9eea885a4$var$getFormItem","newPass","newPassConfirmation","$22bee7c9eea885a4$var$getChangePasswordForm","CHANGE_PASSWORD","disabled","additionalClasses","clickHandler","config","enabled","email","firstName","first_name","secondName","second_name","phone","instance","$98d7fd326aa6c7d6$var$HTTP","$1a3bf1d35d6c383a$var$profilePageApi","changeData","changhePassword","passwordRequest","changeAvatar","$1a3bf1d35d6c383a$export$6de1389019b25b94","Preview","setState","changeUserData","changeUserPassword","changeAvatarData","logout","$11dd7fb7239c8b50$export$d49dffca20dba6f7","imageContainer","chatNameLabel","title","isMyLastMessage","last_message","lastMessageText","chatLastMessageLabel","centerContainer","lastMessageTimeLabel","time","lastMEssageDateString","Date","toLocaleDateString","newMessageCountLabel","unread_count","rightContainer","marker","chatName","handleNewMessageEvent","lastMessage","lastMessageTime","newMessageCount","isMine","$16937c0f4b9922ea$export$1bebc59fb4a9e860","profileLink","chatSearchField","addChatButton","deleteChatButton","addUserButton","deleteUserButton","chatListContainer","leftContainer","chatContainer","onChatItemClick","keyup","searchChats","search","$6eebba6412a55262$export$45493a4354bb7518","ADD_CHAT","DELETE_CHAT","activeChatId","ADD_CHAT_USER","DELETE_CHAT_USER","ON_CHAT_ACTIVATED","onChatActivated","REFRESH_CHATS","chats","refreshChatList","ON_CHAT_DESELECTED","onChatDeselected","RECEIVE_MESSAGE","messages","message","user_id","addMessageHandler","searchValue","chat","chatBlocks","classList","chatMessagesContainer","sendForm","code","targetChat","closest","Number","dataset","chatId","activeItem","attachButton","sendMessageButton","onSendFormSubmit","getChatMessagesContainer","parseInt","getMessages","getChatItem","messageSpan","SEND_MESSAGE","currentMessages","$31f8ba165b200ad3$var$HTTP","$6eebba6412a55262$var$chatPageApi","getChats","createChat","deleteChat","addChatUsers","deleteChatUsers","getChatToken","getNewMessagesCount","$6eebba6412a55262$export$9dc678807ab686b5","sockets","subscribe","publish","GET_CHATS","onAddChatClick","onDeleteChatClick","showUserActionPopup","chanId","sendMessage","socket","onChatsUpdated","onTokensChanged","onNewMessagesCountCHanged","token","createSocket","userId","socketTemplate","WebSocket","applySocketListeners","console","log","wasClean","reason","setInterval","onReceiveMessage","button","inputValue","popup","isDelete","users","$4f5ebf6ccbe4b1d8$export$3bd2b4ee8d70ffe2","confirmPass","$4f5ebf6ccbe4b1d8$var$getSignUpFormField","pass","secName","instanse","$04ed04871f6a1cbf$export$2e2bcd8739ae039","onSignUpSubmit","onSignUpError","signUpErrorLabel","signUpErrorBtn","signUpErrorPopup","$a18ce60c28bcd456$var$HTTP","$bf7943a6b1e317b2$var$signUpPageApi","register","$bf7943a6b1e317b2$export$2e2bcd8739ae039","$5978b459467ec969$var$ErrorPage","errorNumber","$5978b459467ec969$export$31641b61980e511f","$b18cd3c03b2a1b8a$export$2e2bcd8739ae039","router","$eedc45cfc9f599d2$var$onCheckUser","dir"],"version":3,"file":"index.698ec532.js.map"}